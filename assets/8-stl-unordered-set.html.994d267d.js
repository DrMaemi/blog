import{D as p}from"./DetailsOpen.d5ab58f9.js";import{f as o,o as e,c,a as s,b as n,d as a,u as l,e as t,r as C}from"./app.626318f5.js";import{_ as r}from"./_plugin-vue_export-helper.cdc0426e.js";const k=t(`<h2 id="\u1107\u1175\u110C\u1165\u11BC\u1105\u1167\u11AF-\u110C\u1175\u11B8\u1112\u1161\u11B8-\u1112\u1162\u1109\u1175-\u110C\u1175\u11B8\u1112\u1161\u11B8-unordered-set-\u110F\u1165\u11AB\u1110\u1166\u110B\u1175\u1102\u1165" tabindex="-1"><a class="header-anchor" href="#\u1107\u1175\u110C\u1165\u11BC\u1105\u1167\u11AF-\u110C\u1175\u11B8\u1112\u1161\u11B8-\u1112\u1162\u1109\u1175-\u110C\u1175\u11B8\u1112\u1161\u11B8-unordered-set-\u110F\u1165\u11AB\u1110\u1166\u110B\u1175\u1102\u1165" aria-hidden="true">#</a> \uBE44\uC815\uB82C \uC9D1\uD569(\uD574\uC2DC \uC9D1\uD569, unordered_set) \uCEE8\uD14C\uC774\uB108</h2><div class="language-cpp ext-cpp"><pre class="language-cpp"><code><span class="token keyword">template</span> <span class="token operator">&lt;</span>
    <span class="token keyword">class</span> <span class="token class-name">Key</span><span class="token punctuation">,</span>                        <span class="token comment">// unordered_set::key_type/value_type</span>
    <span class="token keyword">class</span> <span class="token class-name">Hash</span> <span class="token operator">=</span> hash<span class="token operator">&lt;</span>Key<span class="token operator">&gt;</span><span class="token punctuation">,</span>           <span class="token comment">// unordered_set::hasher</span>
    <span class="token keyword">class</span> <span class="token class-name">Pred</span> <span class="token operator">=</span> equal_to<span class="token operator">&lt;</span>Key<span class="token operator">&gt;</span><span class="token punctuation">,</span>       <span class="token comment">// unordered_set::key_equal</span>
    <span class="token keyword">class</span> <span class="token class-name">Alloc</span> <span class="token operator">=</span> allocator<span class="token operator">&lt;</span>Key<span class="token operator">&gt;</span>      <span class="token comment">// unordered_set::allocator_type</span>
<span class="token operator">&gt;</span> <span class="token keyword">class</span> <span class="token class-name">unordered_set</span><span class="token punctuation">;</span>
</code></pre></div><p>\uD574\uC2DC \uC9D1\uD569\uC740 \uC0AC\uC804\uC5D0 \uC815\uC758\uB41C \uD574\uC2DC \uD568\uC218\uC5D0 \uAC01 \uC694\uC18C\uB97C \uC801\uC6A9\uD558\uC5EC \uC5BB\uC5B4\uB0B8 \uACB0\uACFC\uAC12(\uD574\uC2DC \uD0A4)\uC744 \uD574\uC2DC \uBC84\uD0B7\uC774\uB780 \uACF5\uAC04\uC5D0 \uBCF4\uAD00\uD558\uB294\uB370, \uC11C\uB85C \uB2E4\uB978 \uC694\uC18C\uAC00 \uAC19\uC740 \uD574\uC2DC \uD0A4\uB97C \uAC00\uC9C8 \uB54C \uD574\uC2DC \uCDA9\uB3CC(Hash Collision)\uC774 \uBC1C\uC0DD\uD55C\uB2E4\uACE0 \uD55C\uB2E4. \uD574\uC2DC \uCDA9\uB3CC\uC740 \uD574\uC2F1\uC744 \uD1B5\uD55C \uC790\uB8CC \uC800\uC7A5 \uC2DC \uC131\uB2A5 \uC800\uD558\uC758 \uC6D0\uC778\uC774 \uB418\uBA70 \uC6D0\uD558\uB294 \uB370\uC774\uD130\uB97C \uCC3E\uB294\uB370 \uC7A5\uC560 \uC694\uC18C\uAC00 \uB41C\uB2E4. \uD574\uC2DC \uCDA9\uB3CC\uC744 \uD574\uACB0\uD558\uB294 \uBC29\uBC95\uC740 \uD06C\uAC8C \uCCB4\uC774\uB2DD(Chaining), \uAC1C\uBC29 \uC8FC\uC18C\uBC95(Open Addressing)\uC774 \uC788\uB294\uB370 \uC790\uC138\uD55C \uB0B4\uC6A9\uC740 \uBCF8\uBB38\uC5D0\uC11C \uB2E4\uB8E8\uC9C0 \uC54A\uACA0\uB2E4. \uACB0\uACFC\uC801\uC73C\uB85C C++\uC5D0\uC11C \uC0AC\uC6A9\uC790 \uC815\uC758 \uC790\uB8CC\uD615\uC744 \uC694\uC18C\uB85C \uAC00\uC9C0\uB294 \uD574\uC2DC \uC9D1\uD569\uC744 \uC0AC\uC6A9\uD560 \uB54C\uB294 \uC0AC\uC6A9\uC790 \uC815\uC758 \uC790\uB8CC\uD615\uC5D0 \uB300\uD55C \uD574\uC2DC \uD568\uC218\uC640 \uBE44\uAD50\uB97C \uC704\uD55C \uC5F0\uC0B0\uC790<code>==</code> \uC624\uBC84\uB85C\uB529\uC774 \uD544\uC694\uD558\uB2E4.</p><p>\uBE44\uC815\uB82C \uC9D1\uD569 \uCEE8\uD14C\uC774\uB108\uB97C \uC774\uC6A9\uD558\uB824\uBA74 \uB2E4\uC74C \uCF54\uB4DC\uB97C \uCD94\uAC00\uD574\uC57C \uD55C\uB2E4.</p><div class="language-cpp ext-cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unordered_set&gt;</span></span>
</code></pre></div><h2 id="\u1106\u1166\u11B7\u1107\u1165-\u1112\u1161\u11B7\u1109\u116E" tabindex="-1"><a class="header-anchor" href="#\u1106\u1166\u11B7\u1107\u1165-\u1112\u1161\u11B7\u1109\u116E" aria-hidden="true">#</a> \uBA64\uBC84 \uD568\uC218</h2>`,6),i={href:"https://cplusplus.com/reference/unordered_set/unordered_set/",target:"_blank",rel:"noopener noreferrer"},d=t(`<h2 id="\u110B\u1168\u110C\u1166" tabindex="-1"><a class="header-anchor" href="#\u110B\u1168\u110C\u1166" aria-hidden="true">#</a> \uC608\uC81C</h2><h3 id="\u110E\u1169\u1100\u1175\u1112\u116A" tabindex="-1"><a class="header-anchor" href="#\u110E\u1169\u1100\u1175\u1112\u116A" aria-hidden="true">#</a> \uCD08\uAE30\uD654</h3><div class="language-cpp ext-cpp"><pre class="language-cpp"><code>vector<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> <span class="token function">v</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
unordered_set<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> first<span class="token punctuation">;</span> <span class="token comment">// empty constructor</span>
unordered_set<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> <span class="token function">second</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// list initializer constructor</span>
unordered_set<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> <span class="token function">third</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// range constructor</span>
unordered_set<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> <span class="token function">fourth</span><span class="token punctuation">(</span>third<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// copy constructor</span>
</code></pre></div><h3 id="\u1100\u116E\u110C\u1169\u110E\u1166-\u1112\u1162\u1109\u1175-\u110C\u1175\u11B8\u1112\u1161\u11B8" tabindex="-1"><a class="header-anchor" href="#\u1100\u116E\u110C\u1169\u110E\u1166-\u1112\u1162\u1109\u1175-\u110C\u1175\u11B8\u1112\u1161\u11B8" aria-hidden="true">#</a> \uAD6C\uC870\uCCB4 \uD574\uC2DC \uC9D1\uD569</h3><p>unordered_set\uC5D0 \uC0AC\uC6A9\uC790 \uC815\uC758 \uC790\uB8CC\uD615\uC744 \uB2F4\uAE30 \uC704\uD574\uC120 \uB2E4\uC74C \uB450 \uAC00\uC9C0\uAC00 \uD544\uC694\uD558\uB2E4.</p><ol><li>\uC5F0\uC0B0\uC790 <code>==</code> \uC624\uBC84\uB85C\uB529</li><li>\uD574\uC2DC \uD568\uC218</li></ol><p>\uD574\uC2DC \uD568\uC218\uB97C \uAD6C\uD604\uD558\uB294 \uBC29\uBC95\uC740 \uB2E4\uC74C \uB450 \uAC00\uC9C0 \uBC29\uBC95\uC774 \uC788\uB2E4.</p><ul><li>std \uB124\uC784\uC2A4\uD398\uC774\uC2A4\uC5D0 hash&lt;Type&gt; \uC815\uC758</li><li>\uD574\uC2DC \uD568\uC218\uB97C \uAC00\uC9C4 \uC790\uB8CC\uD615 \uC815\uC758</li></ul><details class="custom-container details"><summary>\uBC29\uBC95 1. std \uB124\uC784\uC2A4\uD398\uC774\uC2A4 hash&lt;Type&gt; \uC815\uC758</summary><div class="language-cpp ext-cpp"><pre class="language-cpp"><code><span class="token keyword">struct</span> <span class="token class-name">Student</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> <span class="token keyword">long</span> id<span class="token punctuation">;</span>
    string name<span class="token punctuation">;</span>

    <span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token operator">==</span><span class="token punctuation">(</span><span class="token keyword">const</span> Student<span class="token operator">&amp;</span> rhs<span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> id <span class="token operator">==</span> rhs<span class="token punctuation">.</span>id <span class="token operator">&amp;&amp;</span> name <span class="token operator">==</span> rhs<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> std <span class="token punctuation">{</span>
    <span class="token keyword">template</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span>
    <span class="token keyword">struct</span> <span class="token class-name">hash</span><span class="token operator">&lt;</span>Student<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        size_t <span class="token keyword">operator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">const</span> Student<span class="token operator">&amp;</span> arg<span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span>
            hash<span class="token operator">&lt;</span><span class="token keyword">long</span> <span class="token keyword">long</span><span class="token operator">&gt;</span> hll<span class="token punctuation">;</span>
            hash<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> hs<span class="token punctuation">;</span>

            <span class="token keyword">return</span> <span class="token function">hll</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token operator">^</span><span class="token function">hs</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

unordered_set<span class="token operator">&lt;</span>Student<span class="token operator">&gt;</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></details><details class="custom-container details"><summary>\uBC29\uBC95 2. \uD574\uC2DC \uD568\uC218\uB97C \uAC00\uC9C4 \uC790\uB8CC\uD615 \uC815\uC758</summary><div class="language-cpp ext-cpp"><pre class="language-cpp"><code><span class="token keyword">struct</span> <span class="token class-name">Student</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> <span class="token keyword">long</span> id<span class="token punctuation">;</span>
    string name<span class="token punctuation">;</span>

    <span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token operator">==</span><span class="token punctuation">(</span><span class="token keyword">const</span> Student<span class="token operator">&amp;</span> rhs<span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> id <span class="token operator">==</span> rhs<span class="token punctuation">.</span>id <span class="token operator">&amp;&amp;</span> name <span class="token operator">==</span> rhs<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">HashStudent</span> <span class="token punctuation">{</span>
    size_t <span class="token keyword">operator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">const</span> Student<span class="token operator">&amp;</span> arg<span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span>
        hash<span class="token operator">&lt;</span><span class="token keyword">long</span> <span class="token keyword">long</span><span class="token operator">&gt;</span> hll<span class="token punctuation">;</span>
        hash<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> hs<span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token function">hll</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token operator">^</span><span class="token function">hs</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

unordered_set<span class="token operator">&lt;</span>Student<span class="token punctuation">,</span> HashStudent<span class="token operator">&gt;</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></details><h3 id="find-erase" tabindex="-1"><a class="header-anchor" href="#find-erase" aria-hidden="true">#</a> find, erase</h3><div class="language-cpp ext-cpp"><pre class="language-cpp"><code>unordered_set<span class="token operator">&lt;</span>Student<span class="token operator">&gt;</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

unordered_set<span class="token operator">&lt;</span>Student<span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span>iterator it <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
s<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="language-cpp ext-cpp"><pre class="language-cpp"><code>unordered_set<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">auto</span> it <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>it <span class="token operator">==</span> s<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;4 doesn&#39;t exist.\\n&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u110C\u1175\u11B8\u1112\u1161\u11B8-\u110B\u1167\u11AB\u1109\u1161\u11AB" tabindex="-1"><a class="header-anchor" href="#\u110C\u1175\u11B8\u1112\u1161\u11B8-\u110B\u1167\u11AB\u1109\u1161\u11AB" aria-hidden="true">#</a> \uC9D1\uD569 \uC5F0\uC0B0</h3><p>\uC9D1\uD569 \uC5F0\uC0B0\uC5D0 \uC0AC\uC6A9\uB418\uB294 \uD53C\uC5F0\uC0B0\uC790\uAC00 unordered_set \uC790\uB8CC\uD615\uC778 \uACBD\uC6B0 \uB0B4\uB9BC\uCC28\uC21C \uB610\uB294 \uC624\uB984\uCC28\uC21C\uB418\uC5B4 \uC788\uC9C0 \uC54A\uAE30 \uB54C\uBB38\uC5D0 \uC6D0\uD558\uB294 \uB300\uB85C \uB3D9\uC791\uD558\uC9C0 \uC54A\uC744 \uAC00\uB2A5\uC131\uC774 \uC788\uC2B5\uB2C8\uB2E4.</p><p>\uB530\uB77C\uC11C \uC9D1\uD569 \uC5F0\uC0B0\uC744 \uC6D0\uD55C\uB2E4\uBA74 unordered_set \uC790\uB8CC\uD615\uC744 set\uC73C\uB85C \uBCC0\uD658\uD558\uC5EC \uC218\uD589\uD558\uB294 \uAC83\uC774 \uC88B\uC2B5\uB2C8\uB2E4.</p><h2 id="a-\u110E\u1161\u11B7\u110C\u1169" tabindex="-1"><a class="header-anchor" href="#a-\u110E\u1161\u11B7\u110C\u1169" aria-hidden="true">#</a> A. \uCC38\uC870</h2>`,17),B={style:{"text-align":"left"}},D={href:"http://cplusplus.com",target:"_blank",rel:"noopener noreferrer"},h={href:"http://cplusplus.com",target:"_blank",rel:"noopener noreferrer"},g={href:"https://cplusplus.com/reference/unordered_set/unordered_set/",target:"_blank",rel:"noopener noreferrer"},m={href:"http://Github.io",target:"_blank",rel:"noopener noreferrer"},A={href:"https://ansohxxn.github.io/stl/mapsetcustom/",target:"_blank",rel:"noopener noreferrer"},_=o({__name:"8-stl-unordered-set.html",setup(y){return(f,E)=>{const u=C("ExternalLinkIcon");return e(),c("div",null,[k,s("p",null,[n("\uAC01 \uBA64\uBC84\uD568\uC218\uC758 \uC608\uC81C \uCF54\uB4DC\uB97C \uC791\uC131\uD558\uAE30\uC5D4 \uC591\uC774 \uB9E4\uC6B0 \uB9CE\uAE30 \uB54C\uBB38\uC5D0 "),s("a",i,[n("cplusplus.com"),a(u)]),n("\uC5D0\uC11C \uAC01 \uBA64\uBC84 \uD568\uC218 \uB9C1\uD06C\uB97C \uD074\uB9AD\uD558\uC5EC \uC608\uC81C\uB97C \uD655\uC778\uD558\uC790.")]),d,s("div",B,[s("p",null,[s("a",D,[n("cplusplus.com"),a(u)]),n(', "std::unordered_set", '),s("em",null,[s("a",h,[n("cplusplus.com"),a(u)])]),n(", [Online]. Available: "),s("a",g,[n("https://cplusplus.com/reference/unordered_set/unordered_set/"),a(u)]),n(" [Accessed May 26, 2022].")]),s("p",null,[n('\uACF5\uBD80\uD558\uB294 \uC2DD\uBE75\uB9D8, "", '),s("em",null,[s("a",m,[n("Github.io"),a(u)])]),n(", Apr. 1, 2021. [Online]. Available: "),s("a",A,[n("https://ansohxxn.github.io/stl/mapsetcustom/"),a(u)]),n(" [Accessed May 31, 2022].")])]),a(l(p))])}}}),v=r(_,[["__file","8-stl-unordered-set.html.vue"]]);export{v as default};
