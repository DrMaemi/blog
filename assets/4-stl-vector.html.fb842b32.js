import{D as p}from"./DetailsOpen.d5ab58f9.js";import{f as o,o as e,c,a as s,b as n,d as a,u as l,e as t,r as C}from"./app.d3bab68c.js";import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";const r=t(`<div class="language-cpp ext-cpp"><pre class="language-cpp"><code><span class="token keyword">template</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Alloc</span> <span class="token operator">=</span> allocator<span class="token operator">&lt;</span>T<span class="token operator">&gt;&gt;</span> <span class="token keyword">class</span> <span class="token class-name">vector</span><span class="token punctuation">;</span>
</code></pre></div><p>\uBCA1\uD130(Vector)\uB294 \uAC00\uBCC0 \uD06C\uAE30\uC758 \uBC30\uC5F4\uC744 \uD45C\uD604\uD558\uB294 \uC21C\uCC28 \uCEE8\uD14C\uC774\uB108(Sequence Container)\uC774\uB2E4. \uBC30\uC5F4\uACFC \uB9C8\uCC2C\uAC00\uC9C0\uB85C \uC5F0\uC18D\uC801\uC778 \uACF5\uAC04\uC5D0 \uC694\uC18C\uB97C \uC800\uC7A5\uD558\uAE30 \uB54C\uBB38\uC5D0 \uD3EC\uC778\uD130(pointer)\uC640 offset\uC744 \uC774\uC6A9\uD574\uC11C \uC694\uC18C\uC5D0 \uC811\uADFC\uD560 \uC218 \uC788\uB2E4. \uBC30\uC5F4\uACFC \uB2E4\uB978 \uC810\uC740 \uBCA1\uD130\uC758 \uD06C\uAE30\uB294 \uCEE8\uD14C\uC774\uB108\uC5D0 \uC758\uD574 \uC790\uB3D9\uC73C\uB85C \uAD00\uB9AC\uB418\uBA70 \uB3D9\uC801\uC73C\uB85C \uBCC0\uD654\uD560 \uC218 \uC788\uB2E4\uB294 \uC810\uC774\uB2E4.</p><p>\uBCA1\uD130\uB294 \uB0B4\uBD80\uC801\uC73C\uB85C \uB3D9\uC801 \uD560\uB2F9 \uBC30\uC5F4\uC744 \uC774\uC6A9\uD574 \uC694\uC18C\uB97C \uC800\uC7A5\uD55C\uB2E4.</p><p>\uBCA1\uD130 \uCEE8\uD14C\uC774\uB108\uB97C \uC774\uC6A9\uD558\uB824\uBA74 \uB2E4\uC74C \uCF54\uB4DC\uB97C \uCD94\uAC00\uD574\uC57C \uD55C\uB2E4.</p><div class="language-cpp ext-cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector&gt;</span></span>
</code></pre></div><h2 id="\u1106\u1166\u11B7\u1107\u1165-\u1112\u1161\u11B7\u1109\u116E" tabindex="-1"><a class="header-anchor" href="#\u1106\u1166\u11B7\u1107\u1165-\u1112\u1161\u11B7\u1109\u116E" aria-hidden="true">#</a> \uBA64\uBC84 \uD568\uC218</h2>`,6),k={href:"https://m.cplusplus.com/reference/vector/vector/",target:"_blank",rel:"noopener noreferrer"},B=t('<h3 id="\u1109\u1162\u11BC\u1109\u1165\u11BC\u110C\u1161-constructor" tabindex="-1"><a class="header-anchor" href="#\u1109\u1162\u11BC\u1109\u1165\u11BC\u110C\u1161-constructor" aria-hidden="true">#</a> \uC0DD\uC131\uC790(Constructor)</h3><ul><li><em>empty constructor</em></li><li><em>fill constructor</em></li><li><em>range constructor</em></li><li><em>copy constructor</em></li><li><em>move constructor</em></li><li><em>initializer list constructor</em></li></ul><h3 id="\u1109\u1169\u1106\u1167\u11AF\u110C\u1161-destructor" tabindex="-1"><a class="header-anchor" href="#\u1109\u1169\u1106\u1167\u11AF\u110C\u1161-destructor" aria-hidden="true">#</a> \uC18C\uBA78\uC790(Destructor)</h3><ul><li>~vector</li></ul>',4),d={class:"custom-container info"},D=s("p",{class:"custom-container-title"},"Info",-1),A=s("p",null,"\uC18C\uBA78\uC790(Destructor)\uB294 \uAC1D\uCCB4\uAC00 \uC18C\uBA78\uB420 \uB54C \uC790\uB3D9\uC73C\uB85C \uC2E4\uD589\uB418\uB294 \uD074\uB798\uC2A4\uC758 \uBA64\uBC84 \uD568\uC218\uB2E4. \uC0DD\uC131\uC790\uB294 \uD074\uB798\uC2A4\uC758 \uCD08\uAE30\uD654\uB97C \uB3D5\uB3C4\uB85D \uC124\uACC4\uB410\uC9C0\uB9CC \uC18C\uBA78\uC790\uB294 \uCCAD\uC18C\uB97C \uB3D5\uB3C4\uB85D \uC124\uACC4\uB418\uC5C8\uB2E4.\uC9C0\uC5ED\uC5D0\uC11C \uC0DD\uC131\uB41C \uAC1D\uCCB4\uAC00 \uC9C0\uC5ED \uBC94\uC704\uB97C \uBC97\uC5B4\uB098\uAC70\uB098 \uB3D9\uC801\uC73C\uB85C \uD560\uB2F9\uB41C \uAC1D\uCCB4\uAC00 \uC0AD\uC81C \uD0A4\uC6CC\uB4DC\uB97C \uC0AC\uC6A9\uD574 \uBA85\uC2DC\uC801\uC73C\uB85C \uC0AD\uC81C\uB418\uBA74, \uAC1D\uCCB4\uAC00 \uBA54\uBAA8\uB9AC\uC5D0\uC11C \uC81C\uAC70\uB418\uAE30 \uC804\uC5D0 \uD544\uC694\uD55C \uC815\uB9AC\uB97C \uC218\uD589\uD558\uAE30 \uC704\uD574 \uD074\uB798\uC2A4\uB294 \uC18C\uBA78\uC790\uAC00 \uC788\uB294 \uACBD\uC6B0 \uC18C\uBA78\uC790\uB97C \uC790\uB3D9\uC73C\uB85C \uD638\uCD9C\uD55C\uB2E4.\uD074\uB798\uC2A4\uC758 \uBA64\uBC84 \uBCC0\uC218\uB4E4\uC774 \uB2E8\uC21C\uD558\uAC8C \uAE30\uBCF8 \uC790\uB8CC\uD615\uC774 \uAC12 \uD615\uC2DD\uC774\uB77C\uBA74 \uD06C\uAC8C \uD544\uC694 \uC5C6\uC9C0\uB9CC \uB2E4\uB978 \uB9AC\uC18C\uC2A4(\uC608: \uB3D9\uC801 \uBA54\uBAA8\uB9AC, \uD30C\uC77C \uB610\uB294 \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uD578\uB4E4\uB7EC)\uB77C\uBA74 \uAC1D\uCCB4\uAC00 \uC18C\uBA78\uB418\uAE30 \uC804\uC5D0 \uC5B4\uB5A4 \uC885\uB958\uC758 \uC720\uC9C0\uBCF4\uC218\uB97C \uD574\uC57C \uD55C\uB2E4. \uC774\uB54C \uC18C\uBA78\uC790\uB294 \uAC1D\uCCB4\uAC00 \uC18C\uBA78\uB418\uAE30 \uC804\uC5D0 \uB9C8\uC9C0\uB9C9\uC73C\uB85C \uD638\uCD9C\uB418\uB294 \uD2B9\uBCC4\uD55C \uD568\uC218\uC774\uBBC0\uB85C \uC644\uBCBD\uD55C \uC7A5\uC18C\uAC00 \uB41C\uB2E4.",-1),m={href:"https://boycoding.tistory.com/249",target:"_blank",rel:"noopener noreferrer"},h=t(`<h3 id="\u1107\u1161\u11AB\u1107\u1169\u11A8\u110C\u1161-iterator" tabindex="-1"><a class="header-anchor" href="#\u1107\u1161\u11AB\u1107\u1169\u11A8\u110C\u1161-iterator" aria-hidden="true">#</a> \uBC18\uBCF5\uC790(Iterator)</h3><ul><li>begin</li><li>end</li><li>rbegin</li><li>rend</li><li>cbegin</li><li>cend</li><li>crbegin</li><li>crend</li></ul><h3 id="\u110B\u116D\u11BC\u1105\u1163\u11BC-capacity" tabindex="-1"><a class="header-anchor" href="#\u110B\u116D\u11BC\u1105\u1163\u11BC-capacity" aria-hidden="true">#</a> \uC6A9\uB7C9(Capacity)</h3><ul><li>size</li><li>max_size</li><li>resize</li><li>capacity</li><li>empty</li><li>reserve</li><li>shrink_to_fit</li></ul><h3 id="\u110B\u116D\u1109\u1169-\u110C\u1165\u11B8\u1100\u1173\u11AB-element-access" tabindex="-1"><a class="header-anchor" href="#\u110B\u116D\u1109\u1169-\u110C\u1165\u11B8\u1100\u1173\u11AB-element-access" aria-hidden="true">#</a> \uC694\uC18C \uC811\uADFC(Element access)</h3><ul><li>operator[]</li><li>at</li><li>front</li><li>back</li><li>data</li></ul><h3 id="\u1109\u116E\u110C\u1165\u11BC\u110C\u1161-modifier" tabindex="-1"><a class="header-anchor" href="#\u1109\u116E\u110C\u1165\u11BC\u110C\u1161-modifier" aria-hidden="true">#</a> \uC218\uC815\uC790(Modifier)</h3><ul><li>assign</li><li>push_back</li><li>pop_back</li><li>insert</li><li>erase</li><li>swap</li><li>clear</li><li>emplace</li><li>emplace_back</li></ul><h3 id="\u1112\u1161\u11AF\u1103\u1161\u11BC\u110C\u1161-allocator" tabindex="-1"><a class="header-anchor" href="#\u1112\u1161\u11AF\u1103\u1161\u11BC\u110C\u1161-allocator" aria-hidden="true">#</a> \uD560\uB2F9\uC790(Allocator)</h3><ul><li>get_allocator</li></ul><div class="custom-container info"><p class="custom-container-title">Info</p><p>\uD560\uB2F9\uC790(Allocator)\uB780, C++ \uD45C\uC900 \uB77C\uC774\uBE0C\uB7EC\uB9AC\uC5D0\uC11C \uBA54\uBAA8\uB9AC\uC758 \uD560\uB2F9\uACFC \uD574\uC81C\uB97C \uB2F4\uB2F9\uD558\uB294 \uD2B9\uBCC4\uD55C \uAC1D\uCCB4\uB2E4. \uD2B9\uBCC4\uD55C \uBA54\uBAA8\uB9AC \uBAA8\uB378\uC744 \uAE30\uC220\uD558\uBA70 \uC9C1\uC811\uC801\uC73C\uB85C \uD504\uB85C\uADF8\uB798\uBA38\uAC00 \uBA54\uBAA8\uB9AC\uB97C \uC5BB\uB294 \uBC29\uC2DD\uC744 \uCD94\uC0C1\uD654 \uC2DC\uD0A8\uB2E4. String \uD074\uB798\uC2A4\uC640 \uB9C8\uCC2C\uAC00\uC9C0\uB85C, \uC5EC\uB7EC \uAC00\uC9C0 STL \uCEE8\uD14C\uC774\uB108 \uD15C\uD50C\uB9BF\uB4E4\uC774 \uBA54\uBAA8\uB9AC \uAD00\uB9AC\uC5D0 \uC0AC\uC6A9\uD560 allocator \uAC1D\uCCB4\uB97C \uC9C0\uC815\uD558\uB294 \uC120\uD0DD\uC801 \uD15C\uD50C\uB9BF \uC804\uB2EC\uC778\uC790\uB97C \uC0AC\uC6A9\uD55C\uB2E4. \uC608\uB97C \uB4E4\uC5B4, vector \uD15C\uD50C\uB9BF\uC740 \uB2E4\uC74C\uACFC \uAC19\uC774 \uC2DC\uC791\uD55C\uB2E4.</p><div class="language-cpp ext-cpp"><pre class="language-cpp"><code><span class="token keyword">template</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Allocator</span> <span class="token operator">=</span> allocator<span class="token operator">&lt;</span>T<span class="token operator">&gt;&gt;</span>
<span class="token keyword">class</span> <span class="token class-name">vector</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre></div><p>\uC774 \uD15C\uD50C\uB9BF \uC804\uB2EC\uC778\uC790\uB97C \uC704\uD55C \uAC12\uC744 \uC0DD\uB7B5\uD558\uBA74, \uCEE8\uD14C\uC774\uB108 \uD15C\uD50C\uB9BF\uC740 allocator&lt;T&gt; \uD074\uB798\uC2A4\uB97C \uB514\uD3F4\uD2B8\uB85C \uC0AC\uC6A9\uD55C\uB2E4. \uC774 \uD074\uB798\uC2A4\uB294 new\uC640 delete\uB97C \uD45C\uC900 \uBC29\uC2DD\uC73C\uB85C \uC0AC\uC6A9\uD55C\uB2E4.</p></div><h2 id="\u110B\u1168\u110C\u1166" tabindex="-1"><a class="header-anchor" href="#\u110B\u1168\u110C\u1166" aria-hidden="true">#</a> \uC608\uC81C</h2><h3 id="\u1109\u1165\u11AB\u110B\u1165\u11AB" tabindex="-1"><a class="header-anchor" href="#\u1109\u1165\u11AB\u110B\u1165\u11AB" aria-hidden="true">#</a> \uC120\uC5B8</h3><div class="language-cpp ext-cpp"><pre class="language-cpp"><code>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> first<span class="token punctuation">;</span> <span class="token comment">// empty constructor</span>
vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">second</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// fill constructor - int \uC790\uB8CC\uD615 \uAC12 100\uC774 4\uAC1C. \uAC12\uC744 \uC0DD\uB7B5\uD558\uBA74 \uAE30\uBCF8\uAC12\uC73C\uB85C \uCD08\uAE30\uD654(int\uB294 0, string\uC740 &quot;&quot;, etc.)</span>
vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">third</span><span class="token punctuation">(</span>second<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> second<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// range constructor</span>
vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">fourth</span><span class="token punctuation">(</span>thrid<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// copy constructor</span>

<span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">fifth</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> arr<span class="token operator">+</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token operator">/</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uB2E4\uB978 \uBC30\uC5F4\uC758 \uD3EC\uC778\uD130\uB85C \uC0DD\uC131 \uAC00\uB2A5</span>
vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">sixth</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// initializer list constructor</span>
</code></pre></div><h3 id="\u1109\u1165\u11AB\u110B\u1165\u11AB-with-\u1100\u116E\u110C\u1169\u110E\u1166" tabindex="-1"><a class="header-anchor" href="#\u1109\u1165\u11AB\u110B\u1165\u11AB-with-\u1100\u116E\u110C\u1169\u110E\u1166" aria-hidden="true">#</a> \uC120\uC5B8 with \uAD6C\uC870\uCCB4</h3><div class="language-cpp ext-cpp"><pre class="language-cpp"><code><span class="token keyword">struct</span> <span class="token class-name">Student</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> <span class="token keyword">long</span> id<span class="token punctuation">;</span>
    string name<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

vector<span class="token operator">&lt;</span>Student<span class="token operator">&gt;</span> v <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="\u1109\u116E\u11AB\u1112\u116C" tabindex="-1"><a class="header-anchor" href="#\u1109\u116E\u11AB\u1112\u116C" aria-hidden="true">#</a> \uC21C\uD68C</h3><details class="custom-container details"><summary>iterator</summary><div class="language-cpp ext-cpp"><pre class="language-cpp"><code><span class="token keyword">for</span> <span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span>iterator it<span class="token operator">=</span>fifth<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> it<span class="token operator">!=</span>fifth<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> it<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>it <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></details><details class="custom-container details"><summary>for</summary><div class="language-cpp ext-cpp"><pre class="language-cpp"><code><span class="token keyword">for</span> <span class="token punctuation">(</span>size_t i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>fifth<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> fifth<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></details><details class="custom-container details"><summary>enhanced-for</summary><div class="language-cpp ext-cpp"><pre class="language-cpp"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">:</span> fifth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></details><h3 id="push-back-pop-back" tabindex="-1"><a class="header-anchor" href="#push-back-pop-back" aria-hidden="true">#</a> push_back, pop_back</h3><div class="language-cpp ext-cpp"><pre class="language-cpp"><code>fifth<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 16, 2, 77, 29, 123</span>
fifth<span class="token punctuation">.</span><span class="token function">pop_back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 16, 2, 77 ,29</span>
</code></pre></div><h3 id="insert-erase" tabindex="-1"><a class="header-anchor" href="#insert-erase" aria-hidden="true">#</a> insert, erase</h3><div class="language-cpp ext-cpp"><pre class="language-cpp"><code>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">v</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1, 2, 3</span>
vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span>iterator it <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1, 4, 2, 3</span>
v<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1, 2, 3</span>
</code></pre></div><h3 id="\u110B\u1167\u1105\u1165-\u1100\u1161\u11B9-\u1109\u1161\u11B8\u110B\u1175\u11B8" tabindex="-1"><a class="header-anchor" href="#\u110B\u1167\u1105\u1165-\u1100\u1161\u11B9-\u1109\u1161\u11B8\u110B\u1175\u11B8" aria-hidden="true">#</a> \uC5EC\uB7EC \uAC12 \uC0BD\uC785</h3><div class="language-cpp ext-cpp"><pre class="language-cpp"><code>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">v</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1, 2, 3</span>
v<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1, 2, 4, 4, 3</span>
</code></pre></div><h3 id="\u1107\u1166\u11A8\u1110\u1165-\u1112\u1161\u11B8\u110E\u1175\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#\u1107\u1166\u11A8\u1110\u1165-\u1112\u1161\u11B8\u110E\u1175\u1100\u1175" aria-hidden="true">#</a> \uBCA1\uD130 \uD569\uCE58\uAE30</h3><div class="language-cpp ext-cpp"><pre class="language-cpp"><code>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> v1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> v2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
v1<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>v1<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v2<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v2<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="n\u110E\u1161\u110B\u116F\u11AB-\u1107\u1166\u11A8\u1110\u1165-\u110E\u1169\u1100\u1175\u1112\u116A" tabindex="-1"><a class="header-anchor" href="#n\u110E\u1161\u110B\u116F\u11AB-\u1107\u1166\u11A8\u1110\u1165-\u110E\u1169\u1100\u1175\u1112\u116A" aria-hidden="true">#</a> N\uCC28\uC6D0 \uBCA1\uD130 \uCD08\uAE30\uD654</h3><div class="language-cpp ext-cpp"><pre class="language-cpp"><code>vector<span class="token operator">&lt;</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;&gt;</span> <span class="token function">v</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token generic-function"><span class="token function">vector</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 5 x 3 \uBCA1\uD130</span>
</code></pre></div><h3 id="\u110C\u1175\u11B8\u1112\u1161\u11B8-\u110B\u1167\u11AB\u1109\u1161\u11AB" tabindex="-1"><a class="header-anchor" href="#\u110C\u1175\u11B8\u1112\u1161\u11B8-\u110B\u1167\u11AB\u1109\u1161\u11AB" aria-hidden="true">#</a> \uC9D1\uD569 \uC5F0\uC0B0</h3><ul><li><code>&lt;algorithm&gt;</code> \uD5E4\uB354\uC758 <code>set_union</code>, <code>set_intersection</code>, <code>set_difference</code> \uC774\uC6A9</li><li>\uC9D1\uD569 \uC5F0\uC0B0\uC5D0 \uC0AC\uC6A9\uB418\uB294 \uB450 \uC790\uB8CC\uAD6C\uC870\uB294 \uBAA8\uB450 \uC624\uB984\uCC28\uC21C \uB610\uB294 \uB0B4\uB9BC\uCC28\uC21C \uBC29\uC2DD\uC73C\uB85C \uB3D9\uC77C\uD558\uAC8C \uC815\uB82C\uB418\uC5B4 \uC788\uC5B4\uC57C \uD568</li><li>\uB450 \uC790\uB8CC\uAD6C\uC870\uB294 \uC774\uD130\uB808\uC774\uD130\uB098 \uD3EC\uC778\uD130\uB85C \uC0C9\uC778\uC774 \uAC00\uB2A5\uD574\uC57C \uD568</li><li><code>std::inserter</code>\uB97C \uC774\uC6A9\uD558\uBA74 \uACB0\uACFC \uCEE8\uD14C\uC774\uB108\uC758 \uBA54\uBAA8\uB9AC \uC81C\uC5B4(ex. resize, erase)\uB97C \uD560 \uD544\uC694 \uC5C6\uC74C</li></ul><details class="custom-container details"><summary>resize &amp; erase</summary><div class="language-cpp ext-cpp"><pre class="language-cpp"><code>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> v1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> v2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">res</span><span class="token punctuation">(</span>v1<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>v2<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span>iterator it <span class="token operator">=</span> <span class="token function">set_union</span><span class="token punctuation">(</span>
    v1<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v1<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    v2<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v2<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    res<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

res<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>it<span class="token punctuation">,</span> res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1 2 3 4 5 6</span>
</code></pre></div></details><details class="custom-container details"><summary>inserter</summary><div class="language-cpp ext-cpp"><pre class="language-cpp"><code>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> v1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> v2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> res<span class="token punctuation">;</span>

insert_iterator<span class="token operator">&lt;</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;&gt;</span> it <span class="token operator">=</span> <span class="token function">set_union</span><span class="token punctuation">(</span>
    v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    s<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">inserter</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> res<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1 2 3 4 5 6</span>
</code></pre></div></details><h2 id="a-\u110E\u1161\u11B7\u110C\u1169" tabindex="-1"><a class="header-anchor" href="#a-\u110E\u1161\u11B7\u110C\u1169" aria-hidden="true">#</a> A. \uCC38\uC870</h2>`,35),g={style:{"text-align":"left"}},f={href:"http://cplusplus.com",target:"_blank",rel:"noopener noreferrer"},b={href:"http://cplusplus.com",target:"_blank",rel:"noopener noreferrer"},v={href:"https://m.cplusplus.com/reference/vector/vector/",target:"_blank",rel:"noopener noreferrer"},E=s("em",null,"C++ 09.09 - \uC18C\uBA78\uC790 (Destructor)",-1),_=s("em",null,"Tistory",-1),y={href:"https://boycoding.tistory.com/249",target:"_blank",rel:"noopener noreferrer"},w={href:"http://blog.naver.com",target:"_blank",rel:"noopener noreferrer"},x={href:"https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=et3569&logNo=130118830696",target:"_blank",rel:"noopener noreferrer"},F=o({__name:"4-stl-vector.html",setup(q){return(z,S)=>{const u=C("ExternalLinkIcon");return e(),c("div",null,[r,s("p",null,[n("\uAC01 \uBA64\uBC84\uD568\uC218\uC758 \uC608\uC81C \uCF54\uB4DC\uB97C \uC791\uC131\uD558\uAE30\uC5D4 \uC591\uC774 \uB9E4\uC6B0 \uB9CE\uAE30 \uB54C\uBB38\uC5D0 "),s("a",k,[n("cplusplus.com"),a(u)]),n("\uC5D0\uC11C \uAC01 \uBA64\uBC84 \uD568\uC218 \uB9C1\uD06C\uB97C \uD074\uB9AD\uD558\uC5EC \uC608\uC81C\uB97C \uD655\uC778\uD558\uC790.")]),B,s("div",d,[D,A,s("p",null,[n("\uC790\uC138\uD55C \uB0B4\uC6A9\uC774\uB098 \uC608\uC81C \uCF54\uB4DC\uB294 "),s("a",m,[n("boycoding.tistory.com"),a(u)]),n(" \uCC38\uC870")])]),h,s("div",g,[s("p",null,[s("a",f,[n("cplusplus.com"),a(u)]),n(', "std::vector", '),s("em",null,[s("a",b,[n("cplusplus.com"),a(u)])]),n(", [Online]. Available: "),s("a",v,[n("https://m.cplusplus.com/reference/vector/vector/"),a(u)]),n(" [Accessed May 26, 2022].")]),s("p",null,[n("\uC18C\uB144\uCF54\uB529, "),E,n(", "),_,n(", Jul. 21, 2020. [Online]. Available: "),s("a",y,[n("https://boycoding.tistory.com/249"),a(u)]),n(" [Accessed May 26, 2022].")]),s("p",null,[n('\uB2E4\uC57C, "allocator", '),s("em",null,[s("a",w,[n("blog.naver.com"),a(u)])]),n(", Sep. 19, 2011. [Online]. Available: "),s("a",x,[n("https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=et3569&logNo=130118830696"),a(u)]),n(" [Accessed May 26, 2022].")])]),a(l(p))])}}}),N=i(F,[["__file","4-stl-vector.html.vue"]]);export{N as default};
