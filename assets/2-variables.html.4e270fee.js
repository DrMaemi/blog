import{D as t}from"./DetailsOpen.d5ab58f9.js";import{f as e,o as p,c as o,a as s,b as n,d as a,u as c,e as l,r as i}from"./app.9f4af277.js";import{_ as r}from"./_plugin-vue_export-helper.cdc0426e.js";const C=l(`<p>\uBCC0\uC218\uB97C \uC815\uC758\uD55C\uB2E4\uB294 \uAC83\uC740 \uC790\uB8CC\uD615\uC5D0 \uB9DE\uB294 \uAC12\uC744 \uC800\uC7A5\uD560 \uC218 \uC788\uB294 \uBA54\uBAA8\uB9AC \uACF5\uAC04\uC744 \uC0AC\uC6A9\uD558\uB294 \uAC83\uC774\uB2E4.</p><h2 id="\u1107\u1167\u11AB\u1109\u116E-\u1106\u1167\u11BC-\u110C\u1166\u110B\u1163\u11A8" tabindex="-1"><a class="header-anchor" href="#\u1107\u1167\u11AB\u1109\u116E-\u1106\u1167\u11BC-\u110C\u1166\u110B\u1163\u11A8" aria-hidden="true">#</a> \uBCC0\uC218 \uBA85 \uC81C\uC57D</h2><p>C++ \uB2E4\uC74C\uC5D0 \uD574\uB2F9\uD558\uB294 \uBCC0\uC218 \uBA85\uC744 \uC774\uC6A9\uD574 \uBCC0\uC218\uB97C \uC815\uC758\uD558\uC9C0 \uBABB\uD55C\uB2E4.</p><ul><li>\uD504\uB85C\uADF8\uB798\uBC0D \uC5B8\uC5B4\uC758 \uC608\uC57D\uC5B4(ex. int, auto, for, etc.)</li><li>\uC22B\uC790\uB85C \uC2DC\uC791\uD558\uB294 \uBCC0\uC218 \uBA85</li><li>\uB744\uC5B4\uC4F0\uAE30\uAC00 \uC788\uB294 \uBCC0\uC218 \uBA85</li><li>\uBC11\uC904(_)\uC744 \uC81C\uC678\uD55C \uD2B9\uC218 \uBB38\uC790\uB97C \uD3EC\uD568\uD55C \uBCC0\uC218 \uBA85</li></ul><p>\uACB0\uACFC\uC801\uC73C\uB85C \uC601\uBB38\uC790, \uC22B\uC790, \uBC11\uC904\uB9CC\uC744 \uC774\uC6A9\uD558\uC5EC \uBCC0\uC218 \uBA85\uC744 \uC9C0\uC815\uD560 \uC218 \uC788\uB2E4.</p><h2 id="\u1100\u1175\u1107\u1169\u11AB-\u110C\u1161\u1105\u116D\u1112\u1167\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1100\u1175\u1107\u1169\u11AB-\u110C\u1161\u1105\u116D\u1112\u1167\u11BC" aria-hidden="true">#</a> \uAE30\uBCF8 \uC790\uB8CC\uD615</h2><p>\uAE30\uBCF8 \uC790\uB8CC\uD615 \uBCC0\uC218\uB97C \uCD08\uAE30\uD654 \uD558\uB294 \uBC29\uBC95\uC73C\uB85C <code>=</code>, <code>( )</code>, <code>{ }</code>\uB97C \uC0AC\uC6A9\uD55C\uB2E4. \uD560\uB2F9\uC740 <code>=</code>\uB97C \uC0AC\uC6A9\uD55C\uB2E4. <code>=</code>\uC640 <code>{ }</code>\uB294 \uAC19\uC774 \uC0AC\uC6A9\uD560 \uC218 \uC788\uC73C\uB098 <code>=</code>\uC640 <code>( )</code>\uB294 \uAC19\uC774 \uC0AC\uC6A9\uD560 \uC218 \uC5C6\uB2E4.</p><details class="custom-container details"><summary>\uAE30\uBCF8 \uC790\uB8CC\uD615 \uC608\uC81C</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">char</span> a <span class="token operator">=</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token char">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> c<span class="token punctuation">{</span><span class="token char">&#39;c&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token function">m</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> k<span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> w <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">15</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// &#39;=&#39;\uC640 &#39;{ }&#39;\uB97C \uAC19\uC774 \uC0AC\uC6A9\uD558\uB294 \uACBD\uC6B0 \uC790\uB8CC\uD615 \uCD94\uB860 \uC608\uC57D\uC5B4\uC778 auto\uB97C \uC0AC\uC6A9\uD560 \uB54C \uC8FC\uC758\uD574\uC57C \uD55C\uB2E4.</span>
    <span class="token keyword">int</span> x<span class="token punctuation">;</span>
    x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>

    cout <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> c <span class="token operator">&lt;&lt;</span> n <span class="token operator">&lt;&lt;</span> m <span class="token operator">&lt;&lt;</span> k <span class="token operator">&lt;&lt;</span> w <span class="token operator">&lt;&lt;</span> x <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>\uC2E4\uD589 \uACB0\uACFC</summary><div class="language-text ext-text"><pre class="language-text"><code>abc101010155
</code></pre></div></details><h2 id="\u1100\u116E\u110C\u1169\u110E\u1166-struct" tabindex="-1"><a class="header-anchor" href="#\u1100\u116E\u110C\u1169\u110E\u1166-struct" aria-hidden="true">#</a> \uAD6C\uC870\uCCB4 <code>struct</code></h2><p>\uAD6C\uC870\uCCB4 \uC790\uB8CC\uD615\uC744 \uC120\uC5B8\uD560 \uB54C \uBA64\uBC84 \uBCC0\uC218\uB4E4\uC758 \uAE30\uBCF8 \uAC12\uC744 \uC815\uC758\uD560 \uC218 \uC788\uB2E4. \uBCC0\uC218 \uC120\uC5B8 \uC2DC \uBCC4\uB3C4 \uAC12\uC73C\uB85C \uCD08\uAE30\uD654\uD558\uC9C0 \uC54A\uC73C\uBA74 \uAE30\uBCF8 \uAC12\uC774 \uC0AC\uC6A9\uB41C\uB2E4.</p><details class="custom-container details"><summary>struct \uC608\uC81C \uCF54\uB4DC 1</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">MyStruct</span> <span class="token punctuation">{</span> <span class="token comment">// \uC790\uB8CC\uD615 \uC120\uC5B8</span>
    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// \uAE30\uBCF8 \uAC12</span>
    <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span> <span class="token comment">// \uAE30\uBCF8 \uAC12</span>

    <span class="token keyword">int</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> a<span class="token operator">+</span>b<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    MyStruct myStruct1<span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token function">myStruct2</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> myStruct3<span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;myStruct1.sum() is %d\\n&quot;</span><span class="token punctuation">,</span> myStruct1<span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;myStruct2.sum() is %d\\n&quot;</span><span class="token punctuation">,</span> myStruct2<span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>\uC2E4\uD589 \uACB0\uACFC</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>myStruct1.sum() is 7
myStruct2.sum() is 30
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></details><p>\uAE30\uBCF8 \uC790\uB8CC\uD615 \uBCC0\uC218\uB97C \uCD08\uAE30\uD654\uD560 \uB54C\uCC98\uB7FC <code>=</code>, <code>( )</code>, <code>{ }</code>\uB97C \uC0AC\uC6A9\uD560 \uC218 \uC788\uB2E4. <code>( )</code>\uB294 \uBC18\uB4DC\uC2DC \uC0DD\uC131\uC790 \uC624\uBC84\uB85C\uB529\uC744 \uD558\uAC70\uB098 \uAC19\uC740 \uC790\uB8CC\uD615\uC758 \uAD6C\uC870\uCCB4/\uD074\uB798\uC2A4\uB97C \uC778\uC790\uB85C \uC0AC\uC6A9\uD574\uC57C \uD55C\uB2E4. <code>{ }</code>\uC758 \uACBD\uC6B0 \uC0DD\uC131\uC790 \uAD6C\uD604 \uC5EC\uBD80\uC5D0 \uB530\uB77C \uC0AC\uC6A9 \uAC00\uB2A5 \uC5EC\uBD80\uAC00 \uB2EC\uB77C\uC9C4\uB2E4. C++ 11\uBD80\uD130\uB294 \uAD6C\uC870\uCCB4\uAC00 \uD568\uC218(\uBA54\uC11C\uB4DC)\uB97C \uAC00\uC9C8 \uC218 \uC788\uC73C\uBA70 \uD6C4\uC220\uD560 \uD074\uB798\uC2A4 \uC790\uB8CC\uD615\uCC98\uB7FC \uC0DD\uC131\uC790 \uBA54\uC11C\uB4DC \uB610\uD55C \uAC00\uC9C8 \uC218 \uC788\uB2E4.</p><details class="custom-container details"><summary>struct \uC608\uC81C \uCF54\uB4DC 2</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token keyword">double</span> height<span class="token punctuation">;</span>
    <span class="token keyword">float</span> weight<span class="token punctuation">;</span>
    <span class="token keyword">int</span> age<span class="token punctuation">;</span>
    string name<span class="token punctuation">;</span>

    <span class="token comment">// Person() { } // \uC0DD\uC131\uC790 (1)</span>

    <span class="token comment">// Person(double h, float w, int a, string n) { // \uC0DD\uC131\uC790 (2)</span>
    <span class="token comment">//     height=h; weight=w; age=a; name=n;</span>
    <span class="token comment">// }</span>

    <span class="token keyword">void</span> <span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;height : &quot;</span> <span class="token operator">&lt;&lt;</span> height <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;weight : &quot;</span> <span class="token operator">&lt;&lt;</span> weight <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;age : &quot;</span> <span class="token operator">&lt;&lt;</span> age <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;name : &quot;</span> <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
        cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Person a<span class="token punctuation">;</span> <span class="token comment">// \uC0DD\uC131\uC790 \uC624\uBC84\uB85C\uB529\uC774 \uD558\uB098 \uC774\uC0C1\uC77C \uB54C (1)\uC774 \uAD6C\uD604\uB418\uC9C0 \uC54A\uC740 \uACBD\uC6B0 \uC5D0\uB7EC - \uC774\uC640 \uAC19\uC740 \uCD08\uAE30\uD654 \uBC29\uC2DD\uC774 \uAD6C\uD604\uB418\uC5B4 \uC788\uC9C0 \uC54A\uB2E4\uB294 \uC624\uB958 \uBC18\uD658</span>
    Person b <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// &#39;=&#39; \uC0DD\uB7B5 \uAC00\uB2A5, \uC0DD\uC131\uC790 \uC624\uBC84\uB85C\uB529\uC774 \uD558\uB098 \uC774\uC0C1\uC77C \uB54C \uB9E4\uAC1C \uBCC0\uC218 \uC138 \uAC1C\uB97C \uAC00\uC9C0\uB294 \uC0DD\uC131\uC790 \uC624\uBC84\uB85C\uB529\uC774 \uAD6C\uD604\uB418\uC5B4 \uC788\uC9C0 \uC54A\uC73C\uBA74 \uC5D0\uB7EC</span>
    Person a1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">175</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">&quot;Jack&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// &#39;=&#39; \uC0DD\uB7B5 \uAC00\uB2A5, \uC0DD\uC131\uC790 \uC624\uBC84\uB85C\uB529\uC774 \uD558\uB098 \uC774\uC0C1\uC77C \uB54C (2)\uAC00 \uAD6C\uD604\uB418\uC5B4 \uC788\uC9C0 \uC54A\uC73C\uBA74 \uC5D0\uB7EC</span>
    Person b1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">.</span>height<span class="token operator">=</span><span class="token number">165</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>weight<span class="token operator">=</span><span class="token number">55</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">&quot;Amy&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// &#39;=&#39; \uC0DD\uB7B5 \uAC00\uB2A5, \uC0DD\uC131\uC790 \uC624\uBC84\uB85C\uB529\uC774 \uD558\uB098 \uC774\uC0C1\uC77C \uB54C \uB9E4\uAC1C \uBCC0\uC218 \uC138 \uAC1C\uB97C \uAC00\uC9C0\uB294 \uC0DD\uC131\uC790 \uC624\uBC84\uB85C\uB529\uC774 \uAD6C\uD604\uB418\uC5B4 \uC788\uC9C0 \uC54A\uC73C\uBA74 \uC5D0\uB7EC</span>
    Person a2 <span class="token operator">=</span> a1<span class="token punctuation">;</span>
    Person <span class="token function">b2</span><span class="token punctuation">(</span>b1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Person a3<span class="token punctuation">{</span>a2<span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// Person x(180, 70, 24, &quot;Mr. New York&quot;); // (2)\uAC00 \uAD6C\uD604\uB418\uC5B4 \uC788\uC9C0 \uC54A\uC73C\uBA74 \uC5D0\uB7EC</span>
    Person <span class="token function">y</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// c++\uC5D0\uC11C \uAD6C\uC870\uCCB4, \uD074\uB798\uC2A4\uB294 \uC774\uB7EC\uD55C \uCD08\uAE30\uD654 \uBC29\uC2DD\uC744 \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uC74C</span>
    Person<span class="token operator">*</span> z <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    a2<span class="token punctuation">.</span>height <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    b2<span class="token punctuation">.</span>height <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    a3<span class="token punctuation">.</span>age <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>

    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;[Person a]&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    a<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;[Person b]&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    b<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;[Person a1]&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    a1<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;[Person b1]&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    b1<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;[Person a2]&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    a2<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;[Person b2]&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    b2<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;[Person a3]&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    a3<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// cout &lt;&lt; &quot;[Person x]&quot; &lt;&lt; endl;</span>
    <span class="token comment">// x.info();</span>
    <span class="token comment">// cout &lt;&lt; &quot;[Person y]&quot; &lt;&lt; endl;</span>
    <span class="token comment">// y.info(); // \uC5D0\uB7EC(y\uC758 \uBA54\uC11C\uB4DC\uB85C info\uAC00 \uC874\uC7AC\uD558\uC9C0 \uC54A\uB294\uB2E4\uB294 \uC624\uB958 \uBC18\uD658)</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;[Person z]&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    z<span class="token operator">-&gt;</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>\uC2E4\uD589 \uACB0\uACFC</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[Person a]
height : 2.07565e-317
weight : 3.36312e-044
age : 0
name :

[Person b]
height : 1
weight : 2
age : 3
name :

[Person a1]
height : 175
weight : 65
age : 20
name : Jack

[Person b1]
height : 165
weight : 55
age : 0
name : Amy

[Person a2]
height : 176
weight : 65
age : 20
name : Jack

[Person b2]
height : 166
weight : 55
age : 0
name : Amy

[Person a3]
height : 175
weight : 65
age : 21
name : Jack

[Person z]
height : 0
weight : 0
age : 0
name :
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="\u110F\u1173\u11AF\u1105\u1162\u1109\u1173-class" tabindex="-1"><a class="header-anchor" href="#\u110F\u1173\u11AF\u1105\u1162\u1109\u1173-class" aria-hidden="true">#</a> \uD074\uB798\uC2A4 <code>class</code></h2><p>C++\uC758 \uD074\uB798\uC2A4\uB294 \uAD6C\uC870\uCCB4\uC5D0 \uC811\uADFC \uC9C0\uC815\uC790(public, private, protected) \uAC1C\uB150\uC744 \uC0AC\uC6A9\uD55C \uAC83\uACFC \uAC19\uACE0, \uBAA8\uB4E0 \uC811\uADFC \uC9C0\uC815\uC790\uAC00 public\uC778 \uACBD\uC6B0 \uAD6C\uC870\uCCB4\uC640 \uB3D9\uC791 \uB85C\uC9C1\uC774 \uAC19\uB2E4.</p><details class="custom-container details"><summary>class \uC608\uC81C \uCF54\uB4DC 1</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
<span class="token keyword">public</span><span class="token operator">:</span> <span class="token comment">// OOP \uAC00\uBC95\uC5D0 \uB530\uB77C private \uC0AC\uC6A9 \uAD8C\uC7A5</span>
    <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">public</span><span class="token operator">:</span>
    <span class="token function">Point</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token comment">// \uC0DD\uC131\uC790 (1)</span>
    <span class="token function">Point</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> x <span class="token operator">=</span> a<span class="token punctuation">;</span> y <span class="token operator">=</span> b<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token comment">// \uC0DD\uC131\uC790 (2)</span>
    <span class="token function">Point</span><span class="token punctuation">(</span><span class="token keyword">int</span> _1<span class="token punctuation">)</span> <span class="token punctuation">{</span> x <span class="token operator">=</span> _1<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token comment">// \uC0DD\uC131\uC790 (3)</span>
    <span class="token keyword">void</span> <span class="token function">addPoint</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> x <span class="token operator">+=</span> a<span class="token punctuation">;</span> y <span class="token operator">+=</span> b<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">int</span> <span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">int</span> <span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> y<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">void</span> <span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d, %d\\n&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Point p1<span class="token punctuation">;</span> <span class="token comment">// \uC0DD\uC131\uC790 \uC624\uBC84\uB85C\uB529\uC774 \uD558\uB098 \uC774\uC0C1\uC77C \uB54C (1)\uC774 \uAD6C\uD604\uB418\uC9C0 \uC54A\uC740 \uACBD\uC6B0 \uC5D0\uB7EC - \uC774\uC640 \uAC19\uC740 \uCD08\uAE30\uD654 \uBC29\uC2DD\uC774 \uAD6C\uD604\uB418\uC5B4 \uC788\uC9C0 \uC54A\uB2E4\uB294 \uC624\uB958 \uBC18\uD658</span>
    Point <span class="token function">p2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// C++\uC5D0\uC11C \uAD6C\uC870\uCCB4, \uD074\uB798\uC2A4\uB294 \uC774\uB7EC\uD55C \uCD08\uAE30\uD654 \uBC29\uC2DD\uC744 \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uC74C</span>
    Point <span class="token function">p3</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// (2)\uAC00 \uAD6C\uD604\uB418\uC5B4 \uC788\uC9C0 \uC54A\uC73C\uBA74 \uC5D0\uB7EC</span>
    Point p4 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// &#39;=&#39; \uC0DD\uB7B5 \uAC00\uB2A5, \uC0DD\uC131\uC790 \uC624\uBC84\uB85C\uB529\uC774 \uD558\uB098 \uC774\uC0C1\uC77C \uB54C (2)\uAC00 \uAD6C\uD604\uB418\uC5B4 \uC788\uC9C0 \uC54A\uC73C\uBA74 \uC5D0\uB7EC</span>
    Point p5 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">.</span>y<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// &#39;=&#39; \uC0DD\uB7B5 \uAC00\uB2A5, \uC0DD\uC131\uC790 \uC624\uBC84\uB85C\uB529\uC774 \uD558\uB098 \uC774\uC0C1\uC77C \uB54C (3)\uACFC \uAC19\uC774 \uB9E4\uAC1C \uBCC0\uC218 1\uAC1C\uB97C \uAC00\uC9C0\uB294 \uC0DD\uC131\uC790 \uC624\uBC84\uB85C\uB529\uC774 \uAD6C\uD604\uB418\uC5B4 \uC788\uC9C0 \uC54A\uAC70\uB098 \uC0DD\uC131\uC790 \uC624\uBC84\uB85C\uB529\uC774 \uC5C6\uC744 \uB54C \uBA64\uBC84 \uBCC0\uC218\uC758 \uC811\uADFC \uC9C0\uC815\uC790\uAC00 private\uC774\uBA74 \uC5D0\uB7EC, \uC811\uADFC \uC9C0\uC815\uC790\uAC00 public\uC774\uBA74\uC11C (3)\uC774 \uAD6C\uD604\uB41C \uACBD\uC6B0 \uC0DD\uC131\uC790\uAC00 \uC6B0\uC120 \uC2E4\uD589\uB428</span>
    Point p6 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">.</span>x<span class="token operator">=</span><span class="token operator">-</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>y<span class="token operator">=</span><span class="token operator">-</span><span class="token number">11</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// &#39;=&#39; \uC0DD\uB7B5 \uAC00\uB2A5</span>

    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;[p1] : &quot;</span><span class="token punctuation">;</span>
    p1<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// cout &lt;&lt; &quot;[p2] : &quot;; </span>
    <span class="token comment">// p2.info(); // \uC5D0\uB7EC - p2\uC758 \uBA54\uC11C\uB4DC\uB85C info\uAC00 \uC874\uC7AC\uD558\uC9C0 \uC54A\uB294\uB2E4\uB294 \uC624\uB958 \uBC18\uD658</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;[p3] : &quot;</span><span class="token punctuation">;</span>
    p3<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;[p4] : &quot;</span><span class="token punctuation">;</span>
    p4<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;[p5] : &quot;</span><span class="token punctuation">;</span>
    p5<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;[p6] : &quot;</span><span class="token punctuation">;</span>
    p6<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    p5<span class="token punctuation">.</span><span class="token function">addPoint</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    p6<span class="token punctuation">.</span><span class="token function">addPoint</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;[p5] : &quot;</span><span class="token punctuation">;</span>
    p5<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;[p6] : &quot;</span><span class="token punctuation">;</span>
    p6<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>\uC2E4\uD589 \uACB0\uACFC</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[p1] : 0, 0
[p3] : 5, 3
[p4] : 2, 1
[p5] : -1, 0
[p6] : -11, -11
[p5] : 0, 1
[p6] : -10, -10
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="\u110B\u1167\u11AF\u1100\u1165-enum" tabindex="-1"><a class="header-anchor" href="#\u110B\u1167\u11AF\u1100\u1165-enum" aria-hidden="true">#</a> \uC5F4\uAC70 <code>enum</code></h2><p>\uC5F4\uAC70 \uC790\uB8CC\uD615 \uBCC0\uC218\uB294 \uB0B4\uBD80 \uBA64\uBC84 \uBCC0\uC218\uB4E4 \uC911 \uD558\uB098\uB97C \uBA64\uBC84\uC640 \uB300\uC751\uB418\uB294 \uC815\uC218 \uAC12\uC73C\uB85C \uC800\uC7A5\uD55C\uB2E4. \uBA64\uBC84 \uBCC0\uC218\uC758 rvalue\uC5D0 \uBA85\uC2DC\uB418\uB294 \uAC12\uC744 \uAE30\uC900\uC73C\uB85C 1\uC529 \uC99D\uAC00\uD558\uBA70 \uB2E4\uC74C \uBA64\uBC84 \uBCC0\uC218 \uC911 rvalue\uAC00 \uBA85\uC2DC\uB418\uC9C0 \uC54A\uC740 \uBCC0\uC218\uC5D0 \uD560\uB2F9\uB41C\uB2E4. \uC5B4\uB290 \uBCC0\uC218\uC5D0\uB3C4 rvalue\uAC00 \uBA85\uC2DC\uB418\uC9C0 \uC54A\uC558\uB2E4\uBA74 0\uC744 \uAE30\uC900\uC73C\uB85C \uD55C\uB2E4. \uD55C \uC5F4\uAC70 \uC790\uB8CC\uD615\uC5D0 \uC911\uBCF5\uB41C \uC815\uC218 \uAC12\uC744 \uAC00\uC9C8 \uC218 \uC788\uB2E4.</p><details class="custom-container details"><summary>enum \uC608\uC81C \uCF54\uB4DC 1</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">enum</span> <span class="token class-name">Color1</span> <span class="token punctuation">{</span>
    BLACK <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
    RED<span class="token punctuation">,</span>
    BLUE<span class="token punctuation">,</span>
    GREEN
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">enum</span> <span class="token class-name">Color2</span> <span class="token punctuation">{</span>
    YELLOW <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span>
    PUPPLE <span class="token operator">=</span> <span class="token number">11</span>
    <span class="token comment">// RED // \uC8FC\uC758 1. \uC5F4\uAC70 \uC790\uB8CC\uD615 \uB0B4\uBD80 \uBA64\uBC84 \uBCC0\uC218\uB4E4\uC740 \uC911\uBCF5 \uC120\uC5B8\uD560 \uC218 \uC5C6\uC74C, (\uC8FC\uC758 2) \uCC38\uC870</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> colorId <span class="token operator">=</span> BLUE<span class="token punctuation">;</span> <span class="token comment">// \uC8FC\uC758 2. BLUE\uB294 Color1 \uC790\uB8CC\uD615\uC758 \uBCC0\uC218\uB85C\uC11C \uC120\uC5B8\uB41C \uC2A4\uCF54\uD504\uC5D0\uC11C \uC720\uD6A8\uD558\uBA70 \uC815\uC218\uB85C \uCE90\uC2A4\uD305 \uAC00\uB2A5</span>
    Color1 color1 <span class="token operator">=</span> BLUE<span class="token punctuation">;</span>
    Color2 color2 <span class="token operator">=</span> <span class="token punctuation">(</span>Color2<span class="token punctuation">)</span><span class="token number">15</span><span class="token punctuation">;</span> <span class="token comment">// \uC8FC\uC758 3. \uCE90\uC2A4\uD305 \uC5C6\uC774 rvalue\uC5D0 \uC815\uC218\uB97C \uC0AC\uC6A9\uD558\uBA74 \uC5D0\uB7EC / \uC8FC\uC758 4. \uC5F4\uAC70 \uC790\uB8CC\uD615 \uB0B4\uBD80\uC5D0 \uC5C6\uB294 \uBCC0\uC218\uB3C4 \uD560\uB2F9 \uAC00\uB2A5    </span>

    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;color id : &quot;</span> <span class="token operator">&lt;&lt;</span> colorId <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;color1 : &quot;</span> <span class="token operator">&lt;&lt;</span> color1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;color2 : &quot;</span> <span class="token operator">&lt;&lt;</span> color2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    Color1 inputColor<span class="token punctuation">;</span>
    <span class="token comment">// cin &gt;&gt; inputColor; // \uC8FC\uC758 4. \uC785\uB825 \uC2A4\uD2B8\uB9BC\uC73C\uB85C \uC9C1\uC811 \uC785\uB825\uBC1B\uC744 \uC218 \uC5C6\uC74C</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>\uC2E4\uD589 \uACB0\uACFC</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>color id : 1
color1 : 1
color2 : 15
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>\uD55C \uD3B8, \uC11C\uB85C \uB2E4\uB978 \uC5F4\uAC70 \uC790\uB8CC\uD615\uC5D0\uC11C \uB0B4\uBD80\uC801\uC73C\uB85C \uAC19\uC740 \uC815\uC218 \uAC12\uC744 \uAC00\uC9C0\uB294 \uACBD\uC6B0 \uB2E4\uC74C\uACFC \uAC19\uC774 <code>color</code>\uC640 <code>fruit</code>\uC744 \uAD6C\uBD84\uD558\uC9C0 \uBABB\uD558\uB294 \uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD55C\uB2E4.</p><details class="custom-container details"><summary>enum \uC608\uC81C \uCF54\uB4DC 2</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">enum</span> <span class="token class-name">Color</span> <span class="token punctuation">{</span>
		RED<span class="token punctuation">,</span>
		BLUE
	<span class="token punctuation">}</span><span class="token punctuation">;</span>

	<span class="token keyword">enum</span> <span class="token class-name">Fruit</span> <span class="token punctuation">{</span>
		BANANA<span class="token punctuation">,</span>
		APPLE<span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>

	Color color <span class="token operator">=</span> RED<span class="token punctuation">;</span>
	Fruit fruit <span class="token operator">=</span> BANANA<span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>color <span class="token operator">==</span> fruit<span class="token punctuation">)</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Color is fruit ? &quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
	<span class="token comment">// \uB0B4\uBD80\uC801\uC73C\uB85C 0\uC73C\uB85C \uB4E4\uC5B4\uAC00\uAE30 \uB54C\uBB38\uC5D0 \uAC19\uC740 \uAC12\uC73C\uB85C \uBCF4\uC784</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary>\uC2E4\uD589 \uACB0\uACFC</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Color is fruit ?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></details></details><p>C++ 11 \uBC84\uC804 \uC774\uC0C1\uBD80\uD130\uB294 \uC704 \uBB38\uC81C\uB97C \uD574\uACB0\uD558\uAE30 \uC704\uD574 \uC5F4\uAC70 \uD074\uB798\uC2A4 \uC790\uB8CC\uD615 <code>enum class</code>\uC744 \uC0AC\uC6A9\uD560 \uC218 \uC788\uB2E4.</p><details class="custom-container details"><summary>enum class \uC608\uC81C \uCF54\uB4DC</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">enum</span> <span class="token keyword">class</span> <span class="token class-name">Color</span> <span class="token punctuation">{</span>
		RED<span class="token punctuation">,</span>
		BLUE
	<span class="token punctuation">}</span><span class="token punctuation">;</span>

	<span class="token keyword">enum</span> <span class="token keyword">class</span> <span class="token class-name">Fruit</span> <span class="token punctuation">{</span>
		BANANA<span class="token punctuation">,</span>
		APPLE<span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>

	Color color <span class="token operator">=</span> Color<span class="token double-colon punctuation">::</span>RED<span class="token punctuation">;</span>
	Fruit fruit <span class="token operator">=</span> Fruit<span class="token double-colon punctuation">::</span>BANANA<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>color <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>fruit<span class="token punctuation">)</span> <span class="token comment">// \uCE90\uC2A4\uD305 \uC5C6\uC774 == \uC5F0\uC0B0 \uBD88\uAC00\uB85C \uC624\uB958 \uBC18\uD658</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Color is fruit ? &quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="\u110C\u1162\u110C\u1165\u11BC\u110B\u1174-typedef-\u1107\u1167\u11AF\u110E\u1175\u11BC-\u1109\u1165\u11AB\u110B\u1165\u11AB-alias-declaration-using" tabindex="-1"><a class="header-anchor" href="#\u110C\u1162\u110C\u1165\u11BC\u110B\u1174-typedef-\u1107\u1167\u11AF\u110E\u1175\u11BC-\u1109\u1165\u11AB\u110B\u1165\u11AB-alias-declaration-using" aria-hidden="true">#</a> \uC7AC\uC815\uC758 <code>typedef</code>, \uBCC4\uCE6D \uC120\uC5B8(Alias Declaration) <code>using</code></h2><details class="custom-container details"><summary>typedef \uC0AC\uC6A9\uBC95</summary><div class="language-cpp ext-cpp"><pre class="language-cpp"><code><span class="token keyword">typedef</span> <span class="token operator">&lt;</span>\uC790\uB8CC\uD615<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>\uBCC4\uCE6D<span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token operator">&lt;</span>\uAD6C\uC870\uCCB4 \uBA85<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span> <span class="token operator">&lt;</span>\uBCC4\uCE6D<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre></div></details><details class="custom-container details"><summary>using \uC0AC\uC6A9\uBC95</summary><div class="language-cpp ext-cpp"><pre class="language-cpp"><code><span class="token keyword">using</span> <span class="token operator">&lt;</span>\uBCC4\uCE6D<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token operator">&lt;</span>\uC790\uB8CC\uD615<span class="token operator">&gt;</span>

<span class="token keyword">using</span> <span class="token operator">&lt;</span>\uBCC4\uCE6D<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">struct</span> <span class="token operator">&lt;</span>\uAD6C\uC870\uCCB4 \uBA85<span class="token operator">&gt;</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre></div></details><details class="custom-container details"><summary>typedef, using, class \uC608\uC81C \uCF54\uB4DC</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">typedef</span> <span class="token keyword">class</span> <span class="token class-name">MyClass1</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span><span class="token operator">:</span>
        <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>

    <span class="token keyword">public</span><span class="token operator">:</span>
        <span class="token keyword">void</span> <span class="token function">setA</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span> a <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">void</span> <span class="token function">setB</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span> b <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">void</span> <span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d, %d\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> TypeDefMyClass<span class="token punctuation">;</span>

    <span class="token keyword">using</span> UsingMyClass <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">MyClass2</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span><span class="token operator">:</span>
        <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>

    <span class="token keyword">public</span><span class="token operator">:</span>
        <span class="token keyword">void</span> <span class="token function">setA</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span> a <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">void</span> <span class="token function">setB</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span> b <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">void</span> <span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d, %d\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    TypeDefMyClass typeDefMyClass<span class="token punctuation">;</span>
    UsingMyClass usingMyClass<span class="token punctuation">;</span>

    typeDefMyClass<span class="token punctuation">.</span><span class="token function">setA</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    usingMyClass<span class="token punctuation">.</span><span class="token function">setA</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    typeDefMyClass<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    usingMyClass<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>\uC2E4\uD589 \uACB0\uACFC</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1, 0
2, 0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>typedef, using, define \uC608\uC81C \uCF54\uB4DC</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">TypeDefMyStruct</span> <span class="token expression">MS</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">enum</span> <span class="token keyword">class</span> <span class="token class-name">Color</span> <span class="token punctuation">{</span>
		RED<span class="token punctuation">,</span>
		BLUE
	<span class="token punctuation">}</span><span class="token punctuation">;</span>

	<span class="token keyword">enum</span> <span class="token keyword">class</span> <span class="token class-name">Fruit</span> <span class="token punctuation">{</span>
		BANANA<span class="token punctuation">,</span>
		APPLE<span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">typedef</span> Color TypeDefColor<span class="token punctuation">;</span>
    <span class="token keyword">typedef</span> Fruit TypeDefFruit<span class="token punctuation">;</span>
    <span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">MyStruct</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>

        <span class="token keyword">void</span> <span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d, %d\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> TypeDefMyStruct<span class="token punctuation">;</span>

    <span class="token keyword">using</span> UsingColor <span class="token operator">=</span> Color<span class="token punctuation">;</span>
    <span class="token keyword">using</span> UsingFruit <span class="token operator">=</span> TypeDefFruit<span class="token punctuation">;</span>
    <span class="token keyword">using</span> UsingMyStruct <span class="token operator">=</span> TypeDefMyStruct<span class="token punctuation">;</span>
    <span class="token keyword">using</span> UsingVectorInt <span class="token operator">=</span> vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

	TypeDefColor typeDefColor <span class="token operator">=</span> TypeDefColor<span class="token double-colon punctuation">::</span>RED<span class="token punctuation">;</span>
	TypeDefFruit typeDefFruit <span class="token operator">=</span> TypeDefFruit<span class="token double-colon punctuation">::</span>BANANA<span class="token punctuation">;</span>
    TypeDefMyStruct typeDefMyStruct<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    UsingMyStruct usingMyStruct<span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    MS ms<span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    UsingVectorInt <span class="token function">v</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>typeDefColor <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>typeDefFruit<span class="token punctuation">)</span>
		cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Color is fruit ? &quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    typeDefMyStruct<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    usingMyStruct<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ms<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> it<span class="token operator">=</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> it<span class="token operator">!=</span>v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> it<span class="token operator">++</span><span class="token punctuation">)</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>it <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> EXIT_SUCCESS<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>\uC2E4\uD589 \uACB0\uACFC</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Color is fruit ? 
1, 2
2, 4
2, 4
3 3 3 3 3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="a-\u110E\u1161\u11B7\u110C\u1169" tabindex="-1"><a class="header-anchor" href="#a-\u110E\u1161\u11B7\u110C\u1169" aria-hidden="true">#</a> A. \uCC38\uC870</h2>`,36),d={style:{"text-align":"left"}},k={href:"http://Wikidocs.net",target:"_blank",rel:"noopener noreferrer"},v={href:"https://wikidocs.net/50831",target:"_blank",rel:"noopener noreferrer"},m={href:"http://Github.io",target:"_blank",rel:"noopener noreferrer"},B={href:"https://ansohxxn.github.io/cpp/chapter4-8/",target:"_blank",rel:"noopener noreferrer"},b={href:"http://tcpschool.com",target:"_blank",rel:"noopener noreferrer"},D={href:"http://www.tcpschool.com/c/c_struct_intro",target:"_blank",rel:"noopener noreferrer"},A=s("em",null,"Tistory",-1),y={href:"https://min-zero.tistory.com/21",target:"_blank",rel:"noopener noreferrer"},g=s("em",null,"Tistory",-1),h={href:"https://taaewoo.tistory.com/7",target:"_blank",rel:"noopener noreferrer"},f=s("em",null,"Naver blog",-1),w={href:"https://ansohxxn.github.io/cpp/chapter4-6/",target:"_blank",rel:"noopener noreferrer"},E={href:"http://Github.io",target:"_blank",rel:"noopener noreferrer"},F={href:"https://ansohxxn.github.io/cpp/chapter4-6/",target:"_blank",rel:"noopener noreferrer"},x=s("em",null,"Tistory",-1),q={href:"https://unikys.tistory.com/381",target:"_blank",rel:"noopener noreferrer"},_=e({__name:"2-variables.html",setup(P){return(M,S)=>{const u=i("ExternalLinkIcon");return p(),o("div",null,[C,s("div",d,[s("p",null,[n('SEADOG, "C++ \uC774\uC57C\uAE30 - 01.01.02. \uBCC0\uC218(Variables)", '),s("em",null,[s("a",k,[n("Wikidocs.net"),a(u)])]),n(", Feb. 18, 2022. [Online]. Available: "),s("a",v,[n("https://wikidocs.net/50831"),a(u)]),n(" [Accessed May 12, 2022].")]),s("p",null,[n('\uACF5\uBD80\uD558\uB294 \uC2DD\uBE75\uB9D8, "C++ Chapter 4.8 : \uAD6C\uC870\uCCB4", '),s("em",null,[s("a",m,[n("Github.io"),a(u)])]),n(", Jun. 3, 2020. [Online]. Available: "),s("a",B,[n("https://ansohxxn.github.io/cpp/chapter4-8/"),a(u)]),n(" [Accessed May 12, 2022].")]),s("p",null,[n('TCP SCHOOL, "\uAD6C\uC870\uCCB4\uC758 \uAE30\uBCF8", '),s("em",null,[s("a",b,[n("tcpschool.com"),a(u)])]),n(", [Online]. Available: "),s("a",D,[n("http://www.tcpschool.com/c/c_struct_intro"),a(u)]),n(" [Accessed May 12, 2022].")]),s("p",null,[n('\uBBFC-Zero, "[C++ \uAE30\uBCF8 \uACF5\uBD80\uC815\uB9AC] 9. \uAD6C\uC870\uCCB4(struct)", '),A,n(", Dec. 1, 2019. [Online]. Available: "),s("a",y,[n("https://min-zero.tistory.com/21"),a(u)]),n(" [Accessed May 12, 2022].")]),s("p",null,[n('Taaewoo, "[C++] \uAD6C\uC870\uCCB4 \uC0DD\uC131\uC790 \uC624\uBC84\uB85C\uB529 Struct Constructor Overloading", '),g,n(", Jan. 10, 2021. [Online]. Available: "),s("a",h,[n("https://taaewoo.tistory.com/7"),a(u)]),n(" [Accessed May 12, 2022].")]),s("p",null,[n('\uC774\uC6C3\uC9D1 J, "C/C++ \uAC00\uC774\uB4DC 13. \uC0AC\uC6A9\uC790 \uC815\uC758 \uC790\uB8CC\uD615 - \u2461\uACF5\uC6A9\uCCB4, \uC5F4\uAC70\uD615", '),f,n(", May 29, 2020. [Online]. "),s("a",w,[n("https://ansohxxn.github.io/cpp/chapter4-6/"),a(u)]),n(" [Accessed May 12, 2022].")]),s("p",null,[n('\uACF5\uBD80\uD558\uB294 \uC2DD\uBE75\uB9D8, "C++ Chapter 4.6 : \uC5F4\uAC70\uD615\uACFC \uC5F4\uAC70\uD615 \uD074\uB798\uC2A4", '),s("em",null,[s("a",E,[n("Github.io"),a(u)])]),n(", Jun. 3, 2020. [Online]. Available: "),s("a",F,[n("https://ansohxxn.github.io/cpp/chapter4-6/"),a(u)]),n(" [Accessed May 12, 2022].")]),s("p",null,[n('Unikys, "[\uBAA8\uB358C++] typedef vs using \uD0A4\uC6CC\uB4DC \uCC28\uC774\uC810", '),x,n(", Jan. 16, 2017. [Online]. Available: "),s("a",q,[n("https://unikys.tistory.com/381"),a(u)]),n(" [Accessed May 12, 2022].")])]),a(c(t))])}}}),L=r(_,[["__file","2-variables.html.vue"]]);export{L as default};
