import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,b as s,d as t,e,r as l}from"./app.7e49c75a.js";const u={},i=e(`<h2 id="\u1105\u1175\u1111\u1173\u11AF\u1105\u1166\u11A8\u1109\u1167\u11AB-reflection-\u110B\u1175\u1105\u1161\u11AB" tabindex="-1"><a class="header-anchor" href="#\u1105\u1175\u1111\u1173\u11AF\u1105\u1166\u11A8\u1109\u1167\u11AB-reflection-\u110B\u1175\u1105\u1161\u11AB" aria-hidden="true">#</a> \uB9AC\uD50C\uB809\uC158(Reflection)\uC774\uB780?</h2><blockquote><p>\uB7F0\uD0C0\uC784 \uC2DC\uC810\uC5D0 \uBA54\uBAA8\uB9AC\uC5D0 \uC62C\uB77C\uAC04 \uD074\uB798\uC2A4, \uBA54\uC11C\uB4DC\uC758 \uC815\uC758\uB97C \uB3D9\uC801\uC73C\uB85C \uCC3E\uC544 \uC870\uC791\uD560 \uC218 \uC788\uB294 \uAE30\uC220</p></blockquote><blockquote><p>\uAD6C\uCCB4\uC801\uC778 \uD074\uB798\uC2A4 \uD0C0\uC785\uC744 \uC54C\uC9C0 \uBABB\uD574\uB3C4 \uBA64\uBC84 \uBCC0\uC218, \uD558\uC704 \uBA54\uC11C\uB4DC\uC5D0 \uC811\uADFC\uD560 \uC218 \uC788\uB3C4\uB85D \uD574\uC8FC\uB294 API</p></blockquote><h2 id="\u110B\u1168\u110C\u1166" tabindex="-1"><a class="header-anchor" href="#\u110B\u1168\u110C\u1166" aria-hidden="true">#</a> \uC608\uC81C</h2><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Music</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> singer<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Music</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Music</span><span class="token punctuation">(</span><span class="token class-name">String</span> singer<span class="token punctuation">,</span> <span class="token class-name">String</span> title<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>singer <span class="token operator">=</span> singer<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>title <span class="token operator">=</span> title<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSinger</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> singer<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> title<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Reflection</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span> music <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Music</span><span class="token punctuation">(</span><span class="token string">&quot;IU&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;YOU AND ME&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        music<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uCEF4\uD30C\uC77C \uC5D0\uB7EC \uBC1C\uC0DD</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\uC704 \uCF54\uB4DC\uB97C \uBCF4\uBA74 Music \uAC1D\uCCB4\uB97C Object \uD0C0\uC785\uC73C\uB85C \uC0DD\uC131\uD588\uB294\uB370, \uC774 \uACBD\uC6B0 Music \uD074\uB798\uC2A4\uC758 Getter \uBA54\uC11C\uB4DC\uB4E4\uC744 \uC0AC\uC6A9\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.</p><p>\uC774\uB807\uAC8C \uAD6C\uCCB4\uC801 \uD074\uB798\uC2A4 \uD0C0\uC785\uC744 \uC54C\uC9C0 \uBABB\uD560 \uB54C Music \uD074\uB798\uC2A4\uC758 \uBA64\uBC84\uB97C \uC0AC\uC6A9\uD560 \uC218 \uC788\uB3C4\uB85D \uD558\uB294 \uAE30\uB2A5\uC774 \uBC14\uB85C Reflection\uC785\uB2C8\uB2E4.</p><h2 id="reflection-\u1109\u1161\u110B\u116D\u11BC" tabindex="-1"><a class="header-anchor" href="#reflection-\u1109\u1161\u110B\u116D\u11BC" aria-hidden="true">#</a> Reflection \uC0AC\uC6A9</h2><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Reflection</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span> music <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Music</span><span class="token punctuation">(</span><span class="token string">&quot;IU&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;YOU AND ME&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">/* Reflection */</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Class</span> c <span class="token operator">=</span> <span class="token class-name">Music</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
            <span class="token class-name">Method</span> getTitle <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;getTitle&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> title <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>getTitle<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>music<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;title = &quot;</span><span class="token operator">+</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u110B\u1161\u11AF\u110B\u1161\u1103\u116E\u11AF\u1106\u1161\u11AB\u1112\u1161\u11AB-reflection-api" tabindex="-1"><a class="header-anchor" href="#\u110B\u1161\u11AF\u110B\u1161\u1103\u116E\u11AF\u1106\u1161\u11AB\u1112\u1161\u11AB-reflection-api" aria-hidden="true">#</a> \uC54C\uC544\uB458\uB9CC\uD55C Reflection API</h2><ul><li>getDeclaredConstructor() - \uAE30\uBCF8 \uC0DD\uC131\uC790\uB97C \uAC00\uC838\uC634</li><li>getDeclaredConstructor(&lt;Type.class, ...&gt;) - \uC778\uC790\uB85C \uB118\uAE34 \uD0C0\uC785\uB4E4\uC744 \uC778\uC790\uB85C \uAC16\uB294 \uC0DD\uC131\uC790\uB97C \uAC00\uC838\uC634</li></ul><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Reflection</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span> music <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Music</span><span class="token punctuation">(</span><span class="token string">&quot;IU&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;YOU AND ME&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">/* Reflection */</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Class</span> c <span class="token operator">=</span> <span class="token class-name">Music</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
            <span class="token class-name">Constructor</span> constructor <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;constructor = &quot;</span><span class="token operator">+</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// public Music(java.lang.String,java.lang.String)</span>

            <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> field<span class="token operator">:</span> fields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;field = &quot;</span> <span class="token operator">+</span> field<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// field = singer</span>
            <span class="token comment">// field = title</span>

        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="a-\u110E\u1161\u11B7\u110C\u1169" tabindex="-1"><a class="header-anchor" href="#a-\u110E\u1161\u11B7\u110C\u1169" aria-hidden="true">#</a> A. \uCC38\uC870</h2>`,13),k={style:{"text-align":"left"}},r={href:"http://Velog.io",target:"_blank",rel:"noopener noreferrer"},d={href:"https://velog.io/@yebali/Spring-JPA%EC%97%90-%EA%B8%B0%EB%B3%B8-%EC%83%9D%EC%84%B1%EC%9E%90%EA%B0%80-%ED%95%84%EC%9A%94%ED%95%9C-%EC%9D%B4%EC%9C%A0",target:"_blank",rel:"noopener noreferrer"};function m(g,f){const a=l("ExternalLinkIcon");return o(),c("div",null,[i,n("div",k,[n("p",null,[s('yebali, "Spring, JPA\uC5D0 \uAE30\uBCF8 \uC0DD\uC131\uC790\uAC00 \uD544\uC694\uD55C \uC774\uC720," '),n("em",null,[n("a",r,[s("Velog.io"),t(a)])]),s(", Sep. 8, 2021. [Online]. Available: "),n("a",d,[s("https://velog.io/@yebali/Spring-JPA\uC5D0-\uAE30\uBCF8-\uC0DD\uC131\uC790\uAC00-\uD544\uC694\uD55C-\uC774\uC720"),t(a)]),s(" [Accessed Sep. 6, 2022].")])])])}const w=p(u,[["render",m],["__file","reflection.html.vue"]]);export{w as default};
