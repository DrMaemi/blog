import{D as u}from"./DetailsOpen.d5ab58f9.js";import{f as n,o as C,c as s,d as a,u as p,e}from"./app.713a6185.js";import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";const i=e(`<p><em>\uBCF8\uBB38\uC740 2019\uB144\uB3C4 \uD558\uBC18\uAE30 \uC544\uC8FC\uB300\uD559\uAD50\uC758 \uCEF4\uD4E8\uD130\uACF5\uD559\uACFC \uAD50\uC218\uB85C \uC7AC\uC9C1\uD558\uC168\uB358 \uAE40\uC0C1\uD6C8 \uAD50\uC218\uB2D8\uC758 \uC6B4\uC601\uCCB4\uC81C \uACFC\uBAA9 \uAC15\uC758 \uC790\uB8CC\uB97C \uAE30\uBC18\uC73C\uB85C \uC791\uC131\uB418\uC5C8\uC74C\uC744 \uC54C\uB9BD\uB2C8\uB2E4.</em></p><h2 id="_1-ipc-inter-process-communication-\u110B\u1175-\u1111\u1175\u11AF\u110B\u116D\u1112\u1161\u11AB-\u110B\u1175\u110B\u1172" tabindex="-1"><a class="header-anchor" href="#_1-ipc-inter-process-communication-\u110B\u1175-\u1111\u1175\u11AF\u110B\u116D\u1112\u1161\u11AB-\u110B\u1175\u110B\u1172" aria-hidden="true">#</a> 1. IPC(Inter-Process Communication)\uC774 \uD544\uC694\uD55C \uC774\uC720</h2><p>IPC\uB294 \uBAA8\uB4C8 \uAC04 \uD1B5\uC2E0 \uBC29\uC2DD\uC744 \uAD6C\uD604\uD558\uAE30 \uC704\uD574 \uC0AC\uC6A9\uB418\uB294 \uD504\uB85C\uADF8\uB798\uBC0D \uC778\uD130\uD398\uC774\uC2A4 \uC9D1\uD569\uC774\uB2E4.</p><p>\uC55E\uC11C \uD504\uB85C\uC138\uC2A4\uAC00 \uC5B4\uB5A4 \uAC1C\uB150\uC778\uC9C0 \uC124\uBA85\uD588\uC5C8\uB2E4. \uD558\uB098\uC758 \uC2DC\uC2A4\uD15C \uC548\uC5D0\uB294 \uC5EC\uB7EC \uD504\uB85C\uC138\uC2A4\uAC00 \uC874\uC7AC\uD560 \uC218 \uC788\uC73C\uBA70 \uC774\uB4E4\uC740 \uC11C\uB85C \uB3C5\uB9BD\uC801\uC77C\uC218\uB3C4, \uD544\uC694\uC5D0 \uB530\uB77C \uD504\uB85C\uC138\uC2A4 \uAC04 \uD1B5\uC2E0(IPC) \uB610\uB294 \uD611\uC5C5\uC744 \uD574\uC57C \uD560 \uC218\uB3C4 \uC788\uB2E4. \uB610 \uB2E4\uB978 \uC2DC\uC2A4\uD15C \uAC04 \uC11C\uB85C \uB2E4\uB978 \uD504\uB85C\uC138\uC2A4\uAC00 \uC11C\uB85C \uD1B5\uC2E0\uD574\uC57C \uD558\uB294 \uC0C1\uD669\uB3C4 \uC788\uB2E4.</p><p>\uD504\uB85C\uC138\uC2A4 \uAC04 \uD611\uC5C5\uC774 \uD544\uC694\uD55C \uC774\uC720\uB294 \uB2E4\uC74C\uACFC \uAC19\uC740 \uAC83\uB4E4\uC774 \uC788\uC744 \uC218 \uC788\uB2E4.</p><ul><li>Information sharing</li><li>Computation speedup</li><li>Modularity</li><li>Convenience</li></ul><h3 id="_1-1-\u1106\u1165\u11AF\u1110\u1175\u1111\u1173\u1105\u1169\u1109\u1166\u1109\u1173-\u110B\u1161\u110F\u1175\u1110\u1166\u11A8\u110E\u1165-\u110F\u1173\u1105\u1169\u11B7-\u1107\u1173\u1105\u1161\u110B\u116E\u110C\u1165" tabindex="-1"><a class="header-anchor" href="#_1-1-\u1106\u1165\u11AF\u1110\u1175\u1111\u1173\u1105\u1169\u1109\u1166\u1109\u1173-\u110B\u1161\u110F\u1175\u1110\u1166\u11A8\u110E\u1165-\u110F\u1173\u1105\u1169\u11B7-\u1107\u1173\u1105\u1161\u110B\u116E\u110C\u1165" aria-hidden="true">#</a> 1.1. \uBA40\uD2F0\uD504\uB85C\uC138\uC2A4 \uC544\uD0A4\uD14D\uCC98 - \uD06C\uB86C \uBE0C\uB77C\uC6B0\uC800</h3><p>\uAD6C\uAE00\uC758 \uD06C\uB86C \uBE0C\uB77C\uC6B0\uC800\uB294 3\uAC00\uC9C0 \uD615\uC2DD\uC758 \uD504\uB85C\uC138\uC2A4\uAC00 \uC11C\uB85C \uD611\uC5C5\uD558\uB294 \uAD6C\uC870\uB85C \uB3D9\uC791\uD558\uB294 \uBA40\uD2F0\uD504\uB85C\uC138\uC2A4 \uC544\uD0A4\uD14D\uCC98\uB97C \uB530\uB77C \uC124\uACC4\uB410\uB2E4.</p><ul><li>Browser process - \uC0AC\uC6A9\uC790 \uC778\uD130\uD398\uC774\uC2A4, Disk \uBC0F \uB124\uD2B8\uC6CC\uD06C I/O \uAD00\uB9AC</li><li>Renderer process - HTML, Javascript\uB97C \uC774\uC6A9\uD55C \uC6F9 \uD398\uC774\uC9C0 \uB80C\uB354\uB9C1 <ul><li>\uC0C8 \uC6F9 \uD398\uC774\uC9C0\uB97C \uC5F4 \uB54C\uB9C8\uB2E4 \uC0C8\uB85C\uC6B4 Renderer \uC0DD\uC131</li><li>Sandbox\uC5D0\uC11C Disk, Netowrk I/O \uB3D9\uC791\uD558\uB3C4\uB85D \uC81C\uC57D\uD574 \uBCF4\uC548 \uBB38\uC81C \uCD5C\uC18C\uD654</li></ul></li><li>Plug-in process - \uAC01 Plug-in\uC5D0 \uB9DE\uAC8C \uB3D9\uC791</li></ul><h2 id="_2-ipc-\u1106\u1166\u1109\u1169\u1103\u1173" tabindex="-1"><a class="header-anchor" href="#_2-ipc-\u1106\u1166\u1109\u1169\u1103\u1173" aria-hidden="true">#</a> 2. IPC \uBA54\uC18C\uB4DC</h2><p>IPC \uBA54\uC18C\uB4DC\uB294 Shared memory, Socket, Semaphores, Pipes &amp; Named pipes, Message passing \uD06C\uAC8C 5\uAC00\uC9C0\uAC00 \uC788\uB2E4. \uBCF8\uBB38\uC5D0\uC11C\uB294 \uC774 \uC911 Shared memory\uC640 Message passing\uC5D0 \uB300\uD574 \uB2E4\uB8EC\uB2E4.</p><p class="align-center"><img src="https://drive.google.com/uc?export=view&amp;id=1IiW7k1p-kyTXssBhPb05QHAkLf8yeZZn" alt="" loading="lazy"> &lt;\uADF8\uB9BC 1. IPC \uBAA8\uB378 Shared memory &amp; Message passing&gt;</p><h3 id="_2-1-shared-memory" tabindex="-1"><a class="header-anchor" href="#_2-1-shared-memory" aria-hidden="true">#</a> 2.1. Shared memory</h3><ul><li>\uC0AC\uC6A9\uC790 \uD504\uB85C\uC138\uC2A4\uB4E4\uC774 \uBA85\uC2DC\uC801\uC73C\uB85C(<strong>explicitly</strong>) \uD504\uB85C\uC138\uC2A4 \uAC04 \uACF5\uC720 \uBA54\uBAA8\uB9AC \uC601\uC5ED\uC744 \uC0DD\uC131/\uC5F0\uACB0(Create/Join)\uD568</li><li>OS\uAC00 IPC\uC5D0 \uAD00\uC5EC\uD558\uC9C0 \uC54A\uACE0 \uD504\uB85C\uC138\uC2A4\uB4E4\uC774 \uC9C1\uC811 IPC\uC5D0 \uAD00\uC5EC\uD558\uACE0 \uC81C\uC5B4\uD568</li><li>\uD504\uB85C\uC138\uC2A4 \uAC04 \uB3D9\uC2DC\uC131 \uC81C\uC5B4 \uAD00\uB828 \uBB38\uC81C\uB97C \uD574\uACB0\uD558\uB294 \uAC83\uC774 \uC8FC\uB41C \uC774\uC288 <ul><li>\uB3D9\uC2DC\uC131 \uC81C\uC5B4\uB294 \uC774\uD6C4 \uAC15\uC758\uC5D0\uC11C \uB354 \uC790\uC138\uD788 \uB2E4\uB8F0 \uC608\uC815</li></ul></li></ul><div class="language-c ext-c"><pre class="language-c"><code><span class="token comment">// 1. \uD504\uB85C\uC138\uC2A4\uAC00 Shared memory segment\uB97C \uC0DD\uC131, </span>
<span class="token comment">// \uB610\uB294 \uAE30\uC874\uC5D0 \uC874\uC7AC\uD558\uB294 segment\uC5D0 \uC811\uADFC</span>
shm_fd <span class="token operator">=</span> <span class="token function">shm_open</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> O CREATE <span class="token operator">|</span> O RDWR<span class="token punctuation">,</span> <span class="token number">0666</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 2. Segment\uC758 \uD06C\uAE30 \uC9C0\uC815</span>
<span class="token function">ftruncate</span><span class="token punctuation">(</span>shm_fd<span class="token punctuation">,</span> <span class="token number">4096</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 3. \uC774\uD6C4 \uD504\uB85C\uC138\uC2A4\uB294 \uD574\uB2F9 Shared memory\uC5D0 \uB370\uC774\uD130\uB97C \uC4F8 \uC218 \uC788\uB2E4(Write)</span>
<span class="token function">sprintf</span><span class="token punctuation">(</span>shm_fd<span class="token punctuation">,</span> <span class="token string">&quot;Writing to shared memory&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="_2-2-message-passing" tabindex="-1"><a class="header-anchor" href="#_2-2-message-passing" aria-hidden="true">#</a> 2.2. Message passing</h3><p>\uC624\uB298\uB0A0 IPC \uC11C\uBE44\uC2A4\uC758 \uB300\uBD80\uBD84\uC740 \uC774 Message passing \uBC29\uC2DD\uC744 \uC0AC\uC6A9\uD55C\uB2E4. \uBA54\uC2DC\uC9C0 \uD050\uC640 \uBE0C\uB85C\uCEE4 \uD328\uD134\uC744 \uC0AC\uC6A9\uD55C Message passing \uBC29\uC2DD\uC758 IPC \uC11C\uBE44\uC2A4\uB294 \uB9C8\uC774\uD06C\uB85C \uC544\uD0A4\uD14D\uCC98\uB97C \uB530\uB974\uAE30 \uB54C\uBB38\uC5D0 \uC720\uC9C0\uBCF4\uC218\uAC00 \uC27D\uACE0 \uC2DC\uC2A4\uD15C \uB0B4\uAD6C\uC131\uC774 \uB192\uAE30 \uB54C\uBB38\uC774\uB2E4. \uBA54\uC2DC\uC9C0 \uD050\uB97C \uC774\uC6A9\uD558\uAE30 \uB54C\uBB38\uC5D0 \uD1B5\uC2E0\uC5D0 \uC57D\uAC04\uC758 \uC624\uBC84\uD5E4\uB4DC\uAC00 \uC874\uC7AC\uD55C\uB2E4\uB294 \uB2E8\uC810\uC774 \uC788\uC9C0\uB9CC \uC7A5\uC810\uC73C\uB85C \uC778\uD55C \uC774\uB4DD\uC774 \uB354 \uB9CE\uAE30 \uB54C\uBB38\uC5D0 \uB9CE\uC774 \uC0AC\uC6A9\uD55C\uB2E4.</p><ul><li>\uC0AC\uC6A9\uC790 \uD504\uB85C\uC138\uC2A4\uB4E4\uC774 OS\uAC00 \uC81C\uACF5\uD558\uB294 IPC facility\uC5D0 \uAD00\uD55C 2\uAC00\uC9C0 \uAE30\uB2A5\uC744 \uD65C\uC6A9\uD558\uC5EC \uC11C\uB85C \uD1B5\uC2E0 <ul><li>send(message)</li><li>receive(message)</li></ul></li><li>\uBA54\uC2DC\uC9C0 \uD06C\uAE30\uB294 \uBD88\uBCC0(fixed) \uB610\uB294 \uAC00\uBCC0(variable)</li><li>\uBD84\uC0B0\uB41C \uD658\uACBD\uC5D0\uC11C \uD6A8\uC728\uC801 <ul><li>\uB9C8\uC774\uD06C\uB85C \uC544\uD0A4\uD14D\uCC98</li></ul></li><li>\uBA54\uC2DC\uC9C0\uB97C \uB3D9\uAE30/\uBE44\uB3D9\uAE30(Synchronous/Asynchronous) \uBC29\uC2DD\uC73C\uB85C \uCC98\uB9AC \uAC00\uB2A5</li></ul><h4 id="_2-2-1-signals" tabindex="-1"><a class="header-anchor" href="#_2-2-1-signals" aria-hidden="true">#</a> 2.2.1. Signals</h4><p>Message passing \uBAA8\uB378\uC744 \uB530\uB974\uB294 IPC \uAE30\uB2A5 \uC911 \uD558\uB098\uB85C, \uD2B9\uC815 \uC774\uBCA4\uD2B8(Particular event)\uB97C \uD504\uB85C\uC138\uC2A4\uC5D0\uAC8C \uC54C\uB9AC\uAE30 \uC704\uD55C(to notify) IPC \uAE30\uB2A5\uC774\uB2E4.</p><ul><li>Signal\uC740 \uD2B9\uC815 \uC774\uBCA4\uD2B8\uC5D0 \uC758\uD574 \uC0DD\uC131\uB428</li><li>\uBAA9\uC801\uD55C \uD504\uB85C\uC138\uC2A4\uC5D0\uAC8C Signal\uC774 \uC804\uB2EC\uB418\uBA74 \uC801\uC808\uD55C Signal handler\uAC00 \uCC98\uB9AC\uD568 <ul><li>\uBAA8\uB4E0 Signal\uC758 Default handler\uB294 OS kernel\uC5D0 \uAD6C\uD604\uB418\uC5B4 \uC788\uC74C</li><li>\uC0AC\uC6A9\uC790 \uC815\uC758(User-defined) Signal handler\uB97C override\uD560 \uC218 \uC788\uC74C</li></ul></li></ul><p>\uC804\uC5D0 \uC124\uBA85\uD588\uB358 \uBD80\uBAA8-\uC790\uC2DD \uD504\uB85C\uC138\uC2A4 \uAD00\uACC4\uC5D0\uC11C \uBD80\uBAA8 \uD504\uB85C\uC138\uC2A4\uAC00 <code>kill()</code> \uC2DC\uC2A4\uD15C \uCF5C API\uB97C \uD638\uCD9C\uD558\uC5EC \uC790\uC2DD \uD504\uB85C\uC138\uC2A4\uB97C \uC885\uB8CC\uC2DC\uCF30\uB358 \uACBD\uC6B0\uAC00 Signal \uD1B5\uC2E0\uC744 \uC0AC\uC6A9\uD558\uB294 \uACBD\uC6B0\uB2E4.</p><p><strong>Software interrupt</strong>\uB77C\uACE0 \uC0DD\uAC01\uD560 \uC218 \uC788\uB2E4.</p><details class="custom-container details"><summary>\uB2E4\uB978 \uD504\uB85C\uC138\uC2A4\uC5D0\uAC8C signal\uC744 \uBCF4\uB0B4\uB294 \uC2DC\uC2A4\uD15C \uCF5C API</summary><div class="language-c ext-c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">kill</span><span class="token punctuation">(</span><span class="token class-name">pid_t</span> pid<span class="token punctuation">,</span> <span class="token keyword">int</span> sig<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></details><details class="custom-container details"><summary>\uC0AC\uC6A9\uC790 \uC815\uC758 Signal handler</summary><div class="language-c ext-c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;signal.h&gt;</span></span>

<span class="token keyword">void</span> <span class="token function">signal_handler</span><span class="token punctuation">(</span><span class="token keyword">int</span> signal_number<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d signaled !\\n&quot;</span><span class="token punctuation">,</span> signal_number<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">struct</span> <span class="token class-name">sigaction</span> sa <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span>sa_handler <span class="token operator">=</span> signal_handler<span class="token punctuation">,</span>
    <span class="token punctuation">.</span>sa_flags <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> old_sa<span class="token punctuation">;</span>

<span class="token function">sigaction</span><span class="token punctuation">(</span>SIGALRM<span class="token punctuation">,</span> <span class="token operator">&amp;</span>sa<span class="token punctuation">,</span> <span class="token operator">&amp;</span>old_sa<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// SIGALRM\uC744 \uCC98\uB9AC\uD558\uB294 Signal handler override</span>
</code></pre></div></details><h2 id="_3-rpc-remote-procedure-call" tabindex="-1"><a class="header-anchor" href="#_3-rpc-remote-procedure-call" aria-hidden="true">#</a> 3. RPC(Remote Procedure Call)</h2><p>\uC778\uD130\uB137 \uB4F1\uC758 \uB124\uD2B8\uC6CC\uD06C\uB97C \uD1B5\uD574 \uC6D0\uACA9\uC5D0 \uC788\uB294 \uC11C\uBC84\uC758 \uD568\uC218(\uD504\uB85C\uC2DC\uC800, Procedure)\uB97C \uD074\uB77C\uC774\uC5B8\uD2B8\uAC00 \uD638\uCD9C\uD558\uC5EC \uC0AC\uC6A9\uD558\uB294 \uAC83\uC744 RPC\uB77C \uD55C\uB2E4.</p><p>\uD074\uB77C\uC774\uC5B8\uD2B8 \uCE21\uC5D0\uC11C \uC6D0\uACA9 \uC11C\uBC84\uC758 \uD568\uC218\uB97C \uCD94\uC0C1\uD654\uD55C \uBAA8\uB4C8(Client-side proxy procedure)\uC744 <strong>Stub</strong>\uC774\uB77C \uD558\uBA70, Stub\uC740 \uB2E4\uC74C \uAE30\uB2A5\uC744 \uAC00\uC9C0\uACE0 \uC788\uB2E4.</p><ul><li>\uB124\uD2B8\uC6CC\uD06C \uC0C1 \uC6D0\uACA9 \uC11C\uBC84\uC5D0 \uC811\uC18D\uD560 \uC218 \uC788\uB294 \uAE30\uB2A5</li><li>\uD638\uCD9C\uD560 \uD568\uC218\uC758 \uC778\uC790\uB4E4\uC744 \uC815\uD574\uC9C4 \uBC29\uC2DD\uC73C\uB85C \uD328\uD0A4\uC9D5\uD558\uB294 Marshall \uAE30\uB2A5</li></ul><p>\uC11C\uBC84 \uCE21\uC5D0\uC11C RPC \uC694\uCCAD\uC744 \uBC1B\uC73C\uBA74 Marshalled \uC778\uC790\uB4E4\uC744 \uAEBC\uB0B4\uB294(unpack) Unmarshalling\uC744 \uC218\uD589\uD558\uACE0, \uD568\uC218\uC758 \uCC98\uB9AC \uB85C\uC9C1\uC5D0 \uB530\uB77C \uC5BB\uC740 \uACB0\uACFC\uB97C \uD074\uB77C\uC774\uC5B8\uD2B8\uC5D0\uAC8C \uBC18\uD658\uD55C\uB2E4. \uC11C\uBC84 \uCE21\uC5D0\uC11C RPC \uC694\uCCAD\uC744 \uCC98\uB9AC\uD558\uB294 \uBAA8\uB4C8 \uB610\uD55C Stub\uC774\uB77C \uD55C\uB2E4.</p><p class="align-center"><img src="https://drive.google.com/uc?export=view&amp;id=1G5jGrDKSDP2TzrosgtAieU8WK52SdZCs" alt="" loading="lazy"> &lt;\uADF8\uB9BC 2. RPC \uC608\uC81C&gt;</p><h2 id="_4-xdr-external-data-representation" tabindex="-1"><a class="header-anchor" href="#_4-xdr-external-data-representation" aria-hidden="true">#</a> 4. XDR(External Data Representation)</h2><p>\uC11C\uB85C \uB2E4\uB978 Machine architecture\uC5D0\uC11C IPC\uB97C \uD560 \uC218 \uC788\uB3C4\uB85D \uB370\uC774\uD130 \uD45C\uD604 \uD615\uC2DD\uC744 \uC815\uC758\uD55C \uD504\uB85C\uD1A0\uCF5C\uC744 XDR\uC774\uB77C \uD55C\uB2E4.</p><p>XDR\uC740 \uB2E4\uC74C\uACFC \uAC19\uC740 \uAE30\uB2A5\uC744 \uC218\uD589\uD55C\uB2E4.</p><ul><li>\uC11C\uB85C \uB2E4\uB978 Machine architecture\uC5D0\uC11C \uB370\uC774\uD130\uB97C \uD1B5\uC2E0\uD560 \uB54C \uB370\uC774\uD130 \uD45C\uD604 \uD615\uC2DD\uC744 \uD1B5\uC77C\uD558\uC5EC \uD1B5\uC2E0\uC744 \uAC00\uB2A5\uD558\uAC8C \uD568 <ul><li>E.g., Big-endian machine vs Little-endian machine</li></ul></li><li>\uC2E0\uB8B0\uC131 \uC788\uB294 \uD1B5\uC2E0\uC744 \uC704\uD55C \uB124\uD2B8\uC6CC\uD06C \uD504\uB85C\uD1A0\uCF5C \uAE30\uB2A5 \uC218\uD589 <ul><li>E.g., \uC11C\uBC84\uC758 Acknowledgement</li></ul></li><li>\uB370\uC774\uD130 \uC804\uC1A1 \uC2E4\uD328 \uB4F1 \uD1B5\uC2E0 \uC2E4\uD328 \uAC10\uC9C0 <ul><li>\uC2E4\uD328 \uAC10\uC9C0 \uC2DC \uBA54\uC2DC\uC9C0 \uC7AC\uC804\uC1A1(Retransmission)\uACFC \uAC19\uC740 \uB300\uCC98 \uAC00\uB2A5</li></ul></li></ul><p class="align-center"><img src="https://drive.google.com/uc?export=view&amp;id=1ppGAUVBGJ7-vRl_5Ljsj6AG0jF5wVPrU" alt="" loading="lazy"> &lt;\uADF8\uB9BC 3. Big-endian vs Little-endian. \uAC19\uC740 \uB370\uC774\uD130\uC9C0\uB9CC \uBA54\uBAA8\uB9AC \uC800\uC7A5 \uBC29\uC2DD\uC774 \uB2E4\uB984&gt;</p><p>\uB610\uD55C \uC6B4\uC601\uCCB4\uC81C\uB294 \uD504\uB85C\uC138\uC2A4 \uAC04 \uD1B5\uC2E0\uC5D0\uC11C \uD074\uB77C\uC774\uC5B8\uD2B8\uC640 \uC11C\uBC84 \uAC04 \uC5F0\uACB0\uC744 \uC704\uD574 Rendezvous daemon(or Matchmaker) \uC11C\uBE44\uC2A4\uB97C \uC81C\uACF5\uD574\uC900\uB2E4.</p><h2 id="_5-pipe" tabindex="-1"><a class="header-anchor" href="#_5-pipe" aria-hidden="true">#</a> 5. Pipe</h2><p>\uD504\uB85C\uC138\uC2A4 \uAC04 \uD1B5\uC2E0\uC5D0 \uC0AC\uC6A9\uB418\uB294 \uBA54\uC2DC\uC9C0 \uD050 \uC790\uB8CC\uAD6C\uC870\uB97C Pipe\uB77C \uD55C\uB2E4.</p><p>Pipe\uB97C \uAD6C\uD604\uD558\uACE0 \uC0AC\uC6A9\uD560 \uB54C \uB2E4\uC74C \uC0AC\uD56D\uB4E4\uC744 \uACE0\uB824\uD574\uC57C \uD55C\uB2E4.</p><ul><li>\uD1B5\uC2E0 \uBC29\uD5A5\uC774 \uB2E8\uBC29\uD5A5\uC778\uAC00, \uC591\uBC29\uD5A5\uC778\uAC00</li><li>\uC591\uBC29\uD5A5 \uD1B5\uC2E0\uC758 \uACBD\uC6B0 Half/Full-duplex \uC5B4\uB290 \uD2B9\uC131\uC744 \uAC00\uC838\uC57C \uD558\uB294\uAC00 <ul><li>Half-duplex - \uD55C \uCABD\uC5D0\uC11C \uB370\uC774\uD130\uB97C \uC4F0\uACE0 \uC788\uC73C\uBA74 \uB3D9\uC2DC\uC5D0 \uB2E4\uB978 \uCABD\uC5D0\uC11C \uB370\uC774\uD130\uB97C \uC4F8 \uC218 \uC5C6\uC74C(\uC77D\uB294 \uAC74 \uC790\uC720?)</li><li>Full-duplex - \uB3D9\uC2DC\uC5D0 \uB370\uC774\uD130\uB97C \uC4F0\uBA74\uC11C \uC77D\uC744 \uC218 \uC788\uC74C</li></ul></li><li>\uD1B5\uC2E0 \uC2DC \uD1B5\uC2E0\uC5D0 \uCC38\uC5EC\uD558\uB294 \uD504\uB85C\uC138\uC2A4 \uAC04 \uAD00\uACC4(i.e., parent-child)\uAC00 \uC815\uC758\uB418\uC5B4\uC57C \uD558\uB294\uAC00</li><li>Pipe\uAC00 \uB124\uD2B8\uC6CC\uD06C \uC0C1\uC5D0\uC11C \uB3D9\uC791\uD574\uC57C \uD558\uB294\uAC00</li></ul><p>Pipe\uB294 \uD06C\uAC8C Ordinary Pipes, Named Pipes \uB450 \uAC00\uC9C0\uB85C \uBD84\uB958\uD560 \uC218 \uC788\uB2E4.</p><p>Ordinary Pipe\uB294 \uC77C\uBC18\uC801\uC778 Producer-consumer \uD504\uB85C\uC138\uC2A4 \uAD00\uACC4\uC5D0\uC11C \uC0AC\uC6A9\uB420 \uC218 \uC788\uC73C\uBA70 Producer \uD504\uB85C\uC138\uC2A4\uB294 Pipe\uC758 \uD55C \uCABD\uC5D0\uC11C \uB370\uC774\uD130\uB97C \uC4F0\uACE0, Consumer \uD504\uB85C\uC138\uC2A4\uB294 Pipe\uC758 \uB2E4\uB978 \uCABD\uC5D0\uC11C \uB370\uC774\uD130\uB97C \uC77D\uB294\uB2E4. \uC774 \uB54C Producer-consumer \uAD00\uACC4\uC758 \uB450 \uD504\uB85C\uC138\uC2A4\uB294 Parent-child \uAD00\uACC4\uC774\uC5B4\uC57C \uD55C\uB2E4.</p><p>Named Pipe\uB294 \uC591\uBC29\uD5A5 \uD1B5\uC2E0\uC5D0 \uC0AC\uC6A9\uB418\uBA70 Parent-child\uC640 \uAC19\uC740 \uAD00\uACC4\uAC00 \uD544\uC694\uD558\uC9C0 \uC54A\uB2E4. \uC5EC\uB7EC \uD504\uB85C\uC138\uC2A4\uAC00 \uD558\uB098\uC758 Named Pipe\uB97C \uC0AC\uC6A9\uD560 \uC218 \uC788\uC73C\uBA70, \uD574\uB2F9 Pipe\uB97C \uC0AC\uC6A9\uD558\uB294 \uBAA8\uB4E0 \uD504\uB85C\uC138\uC2A4\uAC00 \uC885\uB8CC\uB418\uC5B4\uB3C4 \uD574\uB2F9 Pipe\uB294 \uBA54\uBAA8\uB9AC\uC5D0 \uB0A8\uB294\uB2E4. UNIX\uC640 Window \uACC4\uC5F4 OS \uBAA8\uB450 Named Pipe\uB97C \uC9C0\uC6D0\uD55C\uB2E4.</p><p class="align-center"><img src="https://drive.google.com/uc?export=view&amp;id=10DBL76RekIGQKc9wsc8aqYY749iBZoaC" alt="" loading="lazy"> &lt;\uADF8\uB9BC 4. Ordinary Pipe \uADF8\uB9BC&gt;</p><details class="custom-container details"><summary>Ordinary Pipe \uC0AC\uC6A9 \uC608\uC81C \uCF54\uB4DC(Linux)</summary><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/wait.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> pipefd<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">/* pipefd[0] for read, pipefd[1] for write */</span>
    <span class="token class-name">pid_t</span> cpid<span class="token punctuation">;</span>
    <span class="token keyword">char</span> buf<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">pipe</span><span class="token punctuation">(</span>pipefd<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;pipe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    cpid <span class="token operator">=</span> <span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>cpid <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* Child process reads from pipe */</span>
        <span class="token function">close</span><span class="token punctuation">(</span>pipefd<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* Close unused write end */</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">&lt;</span> <span class="token function">read</span><span class="token punctuation">(</span>pipefd<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>buf<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">write</span><span class="token punctuation">(</span>STDOUT_FILENO<span class="token punctuation">,</span> <span class="token operator">&amp;</span>buf<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token function">write</span><span class="token punctuation">(</span>STDOUT_FILENO<span class="token punctuation">,</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">close</span><span class="token punctuation">(</span>pipefd<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_SUCCESS<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">/* Parent process writes argv[1] to pipe */</span>
        <span class="token function">close</span><span class="token punctuation">(</span>pipefd<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">write</span><span class="token punctuation">(</span>pipefd<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">close</span><span class="token punctuation">(</span>pipefd<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">wait</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_SUCCESS<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,46),c=n({__name:"05-ipc.html",setup(o){return(l,B)=>(C(),s("div",null,[i,a(p(u))]))}}),d=t(c,[["__file","05-ipc.html.vue"]]);export{d as default};
