import{D as u}from"./DetailsOpen.d5ab58f9.js";import{f as e,o as p,c as o,a as s,b as n,d as a,u as c,e as l,r as i}from"./app.024bc7f1.js";import{_ as r}from"./_plugin-vue_export-helper.cdc0426e.js";const d=l(`<p>C++\uC740 \uAE30\uBCF8\uC801\uC73C\uB85C <code>#include &lt;iostream&gt;</code>\uACFC \uAC19\uC774 iostream \uD5E4\uB354 \uD30C\uC77C\uC744 \uC774\uC6A9\uD574 \uC785\uCD9C\uB825\uC744 \uC218\uD589\uD560 \uC218 \uC788\uB2E4.</p><h2 id="\u1103\u116E-\u1100\u1162\u110B\u1174-\u110C\u1165\u11BC\u1109\u116E\u1105\u1173\u11AF-\u110B\u1175\u11B8\u1105\u1167\u11A8\u1107\u1161\u11AE\u1100\u1169-\u1112\u1161\u11B8\u110B\u1173\u11AF-\u110E\u116E\u11AF\u1105\u1167\u11A8" tabindex="-1"><a class="header-anchor" href="#\u1103\u116E-\u1100\u1162\u110B\u1174-\u110C\u1165\u11BC\u1109\u116E\u1105\u1173\u11AF-\u110B\u1175\u11B8\u1105\u1167\u11A8\u1107\u1161\u11AE\u1100\u1169-\u1112\u1161\u11B8\u110B\u1173\u11AF-\u110E\u116E\u11AF\u1105\u1167\u11A8" aria-hidden="true">#</a> \uB450 \uAC1C\uC758 \uC815\uC218\uB97C \uC785\uB825\uBC1B\uACE0 \uD569\uC744 \uCD9C\uB825</h2><details class="custom-container details"><summary>\uC608\uC81C \uCF54\uB4DC</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
    std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\uCCAB \uBC88\uC9F8 \uC22B\uC790 \uC785\uB825:&quot;</span><span class="token punctuation">;</span>
    std<span class="token double-colon punctuation">::</span>cin <span class="token operator">&gt;&gt;</span> a<span class="token punctuation">;</span>

    std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\uB450 \uBC88\uC9F8 \uC22B\uC790 \uC785\uB825:&quot;</span><span class="token punctuation">;</span>
    std<span class="token double-colon punctuation">::</span>cin <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>

    std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\uD569:&quot;</span> <span class="token operator">&lt;&lt;</span> a<span class="token operator">+</span>b <span class="token operator">&lt;&lt;</span> std<span class="token double-colon punctuation">::</span>endl<span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>\uC2E4\uD589 \uACB0\uACFC</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\uCCAB \uBC88\uC9F8 \uC22B\uC790 \uC785\uB825:3
\uB450 \uBC88\uC9F8 \uC22B\uC790 \uC785\uB825:5
\uD569:8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p><code>using namespace std</code> \uCF54\uB4DC\uB97C \uCD94\uAC00\uD574\uC11C \uB124\uC784\uC2A4\uD398\uC774\uC2A4 <code>std::</code>\uB97C \uC0DD\uB7B5\uD560 \uC218 \uC788\uB2E4.</p><h2 id="\u1100\u1169\u11BC\u1107\u1162\u11A8\u110B\u1173\u1105\u1169-\u1100\u116E\u1107\u116E\u11AB\u1103\u116C\u11AB-2\u110E\u1161\u110B\u116F\u11AB-\u1107\u1162\u110B\u1167\u11AF-\u110B\u1175\u11B8\u1105\u1167\u11A8-\u1112\u116E-\u1100\u1173\u1103\u1162\u1105\u1169-\u110E\u116E\u11AF\u1105\u1167\u11A8" tabindex="-1"><a class="header-anchor" href="#\u1100\u1169\u11BC\u1107\u1162\u11A8\u110B\u1173\u1105\u1169-\u1100\u116E\u1107\u116E\u11AB\u1103\u116C\u11AB-2\u110E\u1161\u110B\u116F\u11AB-\u1107\u1162\u110B\u1167\u11AF-\u110B\u1175\u11B8\u1105\u1167\u11A8-\u1112\u116E-\u1100\u1173\u1103\u1162\u1105\u1169-\u110E\u116E\u11AF\u1105\u1167\u11A8" aria-hidden="true">#</a> \uACF5\uBC31\uC73C\uB85C \uAD6C\uBD84\uB41C 2\uCC28\uC6D0 \uBC30\uC5F4 \uC785\uB825 \uD6C4 \uADF8\uB300\uB85C \uCD9C\uB825</h2><details class="custom-container details"><summary>\uC608\uC81C \uCF54\uB4DC</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> rows<span class="token punctuation">,</span> cols<span class="token punctuation">,</span> matrix<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\uD589 \uAC1C\uC218 \uC785\uB825:&quot;</span><span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> rows<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\uC5F4 \uAC1C\uC218 \uC785\uB825:&quot;</span><span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> cols<span class="token punctuation">;</span>

    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\uD589\uB82C \uC785\uB825 \uC2DC\uC791&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>rows<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>cols<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
            cin <span class="token operator">&gt;&gt;</span> matrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>

    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\uC785\uB825\uBC1B\uC740 \uD589\uB82C:&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>rows<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>cols<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
            cout <span class="token operator">&lt;&lt;</span> matrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
        cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>\uC2E4\uD589 \uACB0\uACFC</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\uD589 \uAC1C\uC218 \uC785\uB825:2
\uC5F4 \uAC1C\uC218 \uC785\uB825:3
\uD589\uB82C \uC785\uB825 \uC2DC\uC791
1 2 3
4 5 6
\uC785\uB825\uBC1B\uC740 \uD589\uB82C:
1 2 3 
4 5 6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="\u1106\u116E\u11AB\u110C\u1161\u110B\u1167\u11AF-\u110B\u1175\u11B8\u1105\u1167\u11A8\u1107\u1161\u11AE\u1100\u1175-cin" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1161\u110B\u1167\u11AF-\u110B\u1175\u11B8\u1105\u1167\u11A8\u1107\u1161\u11AE\u1100\u1175-cin" aria-hidden="true">#</a> \uBB38\uC790\uC5F4 \uC785\uB825\uBC1B\uAE30 - cin</h2><details class="custom-container details"><summary>\uC608\uC81C \uCF54\uB4DC</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    string s<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;What&#39;s your name?&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> s<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Hello, &quot;</span> <span class="token operator">&lt;&lt;</span> s <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>\uC2E4\uD589 \uACB0\uACFC</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>What&#39;s your name?
Lee Sang Hyun
Hello, Lee
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p><code>cin</code>\uC744 \uC774\uC6A9\uD574 \uBB38\uC790\uC5F4\uC744 \uC785\uB825\uBC1B\uC73C\uBA74 \uACF5\uBC31 \uBB38\uC790\uB97C \uC785\uB825 \uC885\uB8CC\uB85C \uBC1B\uC544\uB4E4\uC5EC \uC6D0\uD558\uB294 \uB300\uB85C \uB3D9\uC791\uD558\uC9C0 \uC54A\uB294\uB2E4.</p><h2 id="\u1106\u116E\u11AB\u110C\u1161\u110B\u1167\u11AF-\u110B\u1175\u11B8\u1105\u1167\u11A8\u1107\u1161\u11AE\u1100\u1175-getline" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1161\u110B\u1167\u11AF-\u110B\u1175\u11B8\u1105\u1167\u11A8\u1107\u1161\u11AE\u1100\u1175-getline" aria-hidden="true">#</a> \uBB38\uC790\uC5F4 \uC785\uB825\uBC1B\uAE30 - getline</h2><details class="custom-container details"><summary>\uC608\uC81C \uCF54\uB4DC</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    string s<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;What&#39;s your name?&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Hello, &quot;</span> <span class="token operator">&lt;&lt;</span> s <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>\uC2E4\uD589 \uACB0\uACFC</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>What&#39;s your name?
Lee Sang Hyun
Hello, Lee Sang Hyun
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="\u110C\u1161\u1105\u116D\u1112\u1167\u11BC-\u1112\u116A\u11A8\u110B\u1175\u11AB" tabindex="-1"><a class="header-anchor" href="#\u110C\u1161\u1105\u116D\u1112\u1167\u11BC-\u1112\u116A\u11A8\u110B\u1175\u11AB" aria-hidden="true">#</a> \uC790\uB8CC\uD615 \uD655\uC778</h2><details class="custom-container details"><summary>\uC608\uC81C \uCF54\uB4DC 1</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;typeinfo&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;queue&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> st<span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">Cl</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    string txt<span class="token punctuation">;</span>
    <span class="token keyword">int</span> i<span class="token punctuation">;</span>
    st s<span class="token punctuation">;</span>
    Cl c<span class="token punctuation">;</span>
    queue<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> q<span class="token punctuation">;</span>

    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;string \uB370\uC774\uD130 \uD0C0\uC785:&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">typeid</span><span class="token punctuation">(</span>txt<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;int \uB370\uC774\uD130 \uD0C0\uC785:&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">typeid</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;struct \uB370\uC774\uD130 \uD0C0\uC785:&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">typeid</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;class \uB370\uC774\uD130 \uD0C0\uC785:&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">typeid</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;queue \uB370\uC774\uD130 \uD0C0\uC785:&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">typeid</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeid</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">typeid</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;i\uB294 1\uACFC \uAC19\uC740 int \uD0C0\uC785&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeid</span><span class="token punctuation">(</span>txt<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">typeid</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">)</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;txt\uB294 string \uD0C0\uC785&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>\uC2E4\uD589 \uACB0\uACFC</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>string \uB370\uC774\uD130 \uD0C0\uC785:NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
int \uB370\uC774\uD130 \uD0C0\uC785:i
struct \uB370\uC774\uD130 \uD0C0\uC785:2st
class \uB370\uC774\uD130 \uD0C0\uC785:2Cl
queue \uB370\uC774\uD130 \uD0C0\uC785:St5queueIiSt5dequeIiSaIiEEE
i\uB294 1\uACFC \uAC19\uC740 int \uD0C0\uC785
txt\uB294 string \uD0C0\uC785
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p><code>i</code>\uC758 \uB370\uC774\uD130 \uD0C0\uC785\uC774 <code>int</code>\uC77C \uAC83\uC73C\uB85C \uAE30\uB300\uD588\uC73C\uB098 \uADF8\uB300\uB85C <code>i</code>\uAC00 \uB098\uC628\uB2E4. \uC774\uB294 \uCEF4\uD30C\uC77C\uB7EC\uC758 \uC885\uB958\uC5D0 \uB530\uB77C \uC790\uB8CC\uD615 \uD45C\uD604 \uAD6C\uD604\uC774 \uB2E4\uB974\uAC8C \uB418\uC5B4\uC788\uAE30 \uB54C\uBB38\uC774\uB2E4.</p><details class="custom-container details"><summary>\uC608\uC81C \uCF54\uB4DC 2</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
 
<span class="token keyword">struct</span> <span class="token class-name">A</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
 
<span class="token keyword">namespace</span> ns <span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">X</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token keyword">typeid</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;, &quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">typeid</span><span class="token punctuation">(</span>B<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;, &quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">typeid</span><span class="token punctuation">(</span>ns<span class="token double-colon punctuation">::</span>X<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;, &quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">typeid</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>string<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> std<span class="token double-colon punctuation">::</span>endl<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><ul><li>MSVC: <code>struct A, class B, struct ns::X, class std::basic_string&lt;char, struct std::char_traits&lt;char&gt;, class std::allocator&lt;char&gt;&gt;</code></li><li>GCC: <code>1A, 1B, N2ns1XE, NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE</code></li><li>CLang: <code>1A, 1B, N2ns1XE, NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE</code></li></ul><p>\uD544\uC790\uB294 GCC\uB97C \uCEF4\uD30C\uC77C\uB7EC\uB85C \uC0AC\uC6A9\uD588\uAE30 \uB54C\uBB38\uC5D0 \uC704\uC640 \uAC19\uC740 \uACB0\uACFC\uB97C \uC5BB\uC5C8\uB2E4.</p><h2 id="\u110E\u1161\u11B7\u110C\u1169" tabindex="-1"><a class="header-anchor" href="#\u110E\u1161\u11B7\u110C\u1169" aria-hidden="true">#</a> \uCC38\uC870</h2>`,23),k={style:{"text-align":"left"}},C={href:"http://DeveloperNote.com",target:"_blank",rel:"noopener noreferrer"},v={href:"https://developernote.com/2019/06/the-string-representation-of-a-type-is-implementation-defined-in-cpp/",target:"_blank",rel:"noopener noreferrer"},m=s("em",null,"Naver blog",-1),B={href:"https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=yong030389&logNo=221698524595",target:"_blank",rel:"noopener noreferrer"},b=e({__name:"3-io.html",setup(g){return(y,A)=>{const t=i("ExternalLinkIcon");return p(),o("div",null,[d,s("div",k,[s("p",null,[n("dmitriano, The string representation of a type is implementation defined in C++, "),s("em",null,[s("a",C,[n("DeveloperNote.com"),a(t)])]),n(", Jun. 19, 2018. [Online]. Available: "),s("a",v,[n("https://developernote.com/2019/06/the-string-representation-of-a-type-is-implementation-defined-in-cpp/"),a(t)]),n(" [Accessed Nov. 29, 2021].")]),s("p",null,[n("\uCFFC\uCE20\uC758 \uC138\uACC4\uACF5\uBC29, \uCEF4\uD30C\uC77C\uB7EC\uC640 IDE, "),m,n(", Nov. 5, 2019. [Online]. Available: "),s("a",B,[n("https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=yong030389&logNo=221698524595"),a(t)]),n(" [Accessed Nov. 29, 2021].")])]),a(c(u))])}}}),w=r(b,[["__file","3-io.html.vue"]]);export{w as default};
